// Generated by CoffeeScript 1.9.2
(function() {
  var root;

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  root.Lethargy = (function() {
    function Lethargy(stability, sensitivity, tolerance, delay) {
      this.stability = stability != null ? Math.abs(stability) : 8;
      this.sensitivity = sensitivity != null ? 1 + Math.abs(sensitivity) : 100;
      this.tolerance = tolerance != null ? 1 + Math.abs(tolerance) : 1.1;
      this.delay = delay != null ? delay : 150;
      this.lastUpDeltas = (function() {
        var i, ref, results;
        results = [];
        for (i = 1, ref = this.stability * 2; 1 <= ref ? i <= ref : i >= ref; 1 <= ref ? i++ : i--) {
          results.push(null);
        }
        return results;
      }).call(this);
      this.lastDownDeltas = (function() {
        var i, ref, results;
        results = [];
        for (i = 1, ref = this.stability * 2; 1 <= ref ? i <= ref : i >= ref; 1 <= ref ? i++ : i--) {
          results.push(null);
        }
        return results;
      }).call(this);
      this.deltasTimestamp = (function() {
        var i, ref, results;
        results = [];
        for (i = 1, ref = this.stability * 2; 1 <= ref ? i <= ref : i >= ref; 1 <= ref ? i++ : i--) {
          results.push(null);
        }
        return results;
      }).call(this);
    }

    Lethargy.prototype.check = function(e) {
      var lastDelta;
      e = e.originalEvent || e;
      if (e.wheelDelta != null) {
        lastDelta = e.wheelDelta;
      } else if (e.deltaY != null) {
        lastDelta = e.deltaY * -40;
      } else if ((e.detail != null) || e.detail === 0) {
        lastDelta = e.detail * -40;
      }
      this.deltasTimestamp.push(Date.now());
      this.deltasTimestamp.shift();
      if (lastDelta > 0) {
        this.lastUpDeltas.push(lastDelta);
        this.lastUpDeltas.shift();
        return this.isInertia(1);
      } else {
        this.lastDownDeltas.push(lastDelta);
        this.lastDownDeltas.shift();
        return this.isInertia(-1);
      }
      return false;
    };

    Lethargy.prototype.isInertia = function(direction) {
      var lastDeltas, lastDeltasNew, lastDeltasOld, newAverage, newSum, oldAverage, oldSum;
      lastDeltas = direction === -1 ? this.lastDownDeltas : this.lastUpDeltas;
      if (lastDeltas[0] === null) {
        return direction;
      }
      if (this.deltasTimestamp[(this.stability * 2) - 2] + this.delay > Date.now() && lastDeltas[0] === lastDeltas[(this.stability * 2) - 1]) {
        return false;
      }
      lastDeltasOld = lastDeltas.slice(0, this.stability);
      lastDeltasNew = lastDeltas.slice(this.stability, this.stability * 2);
      oldSum = lastDeltasOld.reduce(function(t, s) {
        return t + s;
      });
      newSum = lastDeltasNew.reduce(function(t, s) {
        return t + s;
      });
      oldAverage = oldSum / lastDeltasOld.length;
      newAverage = newSum / lastDeltasNew.length;
      if (Math.abs(oldAverage) < Math.abs(newAverage * this.tolerance) && (this.sensitivity < Math.abs(newAverage))) {
        return direction;
      } else {
        return false;
      }
    };

    Lethargy.prototype.showLastUpDeltas = function() {
      return this.lastUpDeltas;
    };

    Lethargy.prototype.showLastDownDeltas = function() {
      return this.lastDownDeltas;
    };

    return Lethargy;

  })();

}).call(this);
;
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.AOS=t():e.AOS=t()}(this,function(){return function(e){function t(o){if(n[o])return n[o].exports;var i=n[o]={exports:{},id:o,loaded:!1};return e[o].call(i.exports,i,i.exports,t),i.loaded=!0,i.exports}var n={};return t.m=e,t.c=n,t.p="dist/",t(0)}([function(e,t,n){"use strict";function o(e){return e&&e.__esModule?e:{default:e}}var i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e},r=n(1),a=(o(r),n(6)),u=o(a),c=n(7),f=o(c),s=n(8),d=o(s),l=n(9),p=o(l),m=n(10),b=o(m),v=n(11),y=o(v),g=n(14),h=o(g),w=[],k=!1,x=document.all&&!window.atob,j={offset:120,delay:0,easing:"ease",duration:400,disable:!1,once:!1,startEvent:"DOMContentLoaded"},O=function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(e&&(k=!0),k)return w=(0,y.default)(w,j),(0,b.default)(w,j.once),w},S=function(){w=(0,h.default)(),O()},_=function(){w.forEach(function(e,t){e.node.removeAttribute("data-aos"),e.node.removeAttribute("data-aos-easing"),e.node.removeAttribute("data-aos-duration"),e.node.removeAttribute("data-aos-delay")})},E=function(e){return e===!0||"mobile"===e&&p.default.mobile()||"phone"===e&&p.default.phone()||"tablet"===e&&p.default.tablet()||"function"==typeof e&&e()===!0},z=function(e){return j=i(j,e),w=(0,h.default)(),E(j.disable)||x?_():(document.querySelector("body").setAttribute("data-aos-easing",j.easing),document.querySelector("body").setAttribute("data-aos-duration",j.duration),document.querySelector("body").setAttribute("data-aos-delay",j.delay),"DOMContentLoaded"===j.startEvent&&["complete","interactive"].indexOf(document.readyState)>-1?O(!0):"load"===j.startEvent?window.addEventListener(j.startEvent,function(){O(!0)}):document.addEventListener(j.startEvent,function(){O(!0)}),window.addEventListener("resize",(0,f.default)(O,50,!0)),window.addEventListener("orientationchange",(0,f.default)(O,50,!0)),window.addEventListener("scroll",(0,u.default)(function(){(0,b.default)(w,j.once)},99)),document.addEventListener("DOMNodeRemoved",function(e){var t=e.target;t&&1===t.nodeType&&t.hasAttribute&&t.hasAttribute("data-aos")&&(0,f.default)(S,50,!0)}),(0,d.default)("[data-aos]",S),w)};e.exports={init:z,refresh:O,refreshHard:S}},function(e,t){},,,,,function(e,t){(function(t){"use strict";function n(e,t,n){function o(t){var n=b,o=v;return b=v=void 0,k=t,g=e.apply(o,n)}function r(e){return k=e,h=setTimeout(s,t),S?o(e):g}function a(e){var n=e-w,o=e-k,i=t-n;return _?j(i,y-o):i}function c(e){var n=e-w,o=e-k;return void 0===w||n>=t||n<0||_&&o>=y}function s(){var e=O();return c(e)?d(e):void(h=setTimeout(s,a(e)))}function d(e){return h=void 0,E&&b?o(e):(b=v=void 0,g)}function l(){void 0!==h&&clearTimeout(h),k=0,b=w=v=h=void 0}function p(){return void 0===h?g:d(O())}function m(){var e=O(),n=c(e);if(b=arguments,v=this,w=e,n){if(void 0===h)return r(w);if(_)return h=setTimeout(s,t),o(w)}return void 0===h&&(h=setTimeout(s,t)),g}var b,v,y,g,h,w,k=0,S=!1,_=!1,E=!0;if("function"!=typeof e)throw new TypeError(f);return t=u(t)||0,i(n)&&(S=!!n.leading,_="maxWait"in n,y=_?x(u(n.maxWait)||0,t):y,E="trailing"in n?!!n.trailing:E),m.cancel=l,m.flush=p,m}function o(e,t,o){var r=!0,a=!0;if("function"!=typeof e)throw new TypeError(f);return i(o)&&(r="leading"in o?!!o.leading:r,a="trailing"in o?!!o.trailing:a),n(e,t,{leading:r,maxWait:t,trailing:a})}function i(e){var t="undefined"==typeof e?"undefined":c(e);return!!e&&("object"==t||"function"==t)}function r(e){return!!e&&"object"==("undefined"==typeof e?"undefined":c(e))}function a(e){return"symbol"==("undefined"==typeof e?"undefined":c(e))||r(e)&&k.call(e)==d}function u(e){if("number"==typeof e)return e;if(a(e))return s;if(i(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=i(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(l,"");var n=m.test(e);return n||b.test(e)?v(e.slice(2),n?2:8):p.test(e)?s:+e}var c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},f="Expected a function",s=NaN,d="[object Symbol]",l=/^\s+|\s+$/g,p=/^[-+]0x[0-9a-f]+$/i,m=/^0b[01]+$/i,b=/^0o[0-7]+$/i,v=parseInt,y="object"==("undefined"==typeof t?"undefined":c(t))&&t&&t.Object===Object&&t,g="object"==("undefined"==typeof self?"undefined":c(self))&&self&&self.Object===Object&&self,h=y||g||Function("return this")(),w=Object.prototype,k=w.toString,x=Math.max,j=Math.min,O=function(){return h.Date.now()};e.exports=o}).call(t,function(){return this}())},function(e,t){(function(t){"use strict";function n(e,t,n){function i(t){var n=b,o=v;return b=v=void 0,O=t,g=e.apply(o,n)}function r(e){return O=e,h=setTimeout(s,t),S?i(e):g}function u(e){var n=e-w,o=e-O,i=t-n;return _?x(i,y-o):i}function f(e){var n=e-w,o=e-O;return void 0===w||n>=t||n<0||_&&o>=y}function s(){var e=j();return f(e)?d(e):void(h=setTimeout(s,u(e)))}function d(e){return h=void 0,E&&b?i(e):(b=v=void 0,g)}function l(){void 0!==h&&clearTimeout(h),O=0,b=w=v=h=void 0}function p(){return void 0===h?g:d(j())}function m(){var e=j(),n=f(e);if(b=arguments,v=this,w=e,n){if(void 0===h)return r(w);if(_)return h=setTimeout(s,t),i(w)}return void 0===h&&(h=setTimeout(s,t)),g}var b,v,y,g,h,w,O=0,S=!1,_=!1,E=!0;if("function"!=typeof e)throw new TypeError(c);return t=a(t)||0,o(n)&&(S=!!n.leading,_="maxWait"in n,y=_?k(a(n.maxWait)||0,t):y,E="trailing"in n?!!n.trailing:E),m.cancel=l,m.flush=p,m}function o(e){var t="undefined"==typeof e?"undefined":u(e);return!!e&&("object"==t||"function"==t)}function i(e){return!!e&&"object"==("undefined"==typeof e?"undefined":u(e))}function r(e){return"symbol"==("undefined"==typeof e?"undefined":u(e))||i(e)&&w.call(e)==s}function a(e){if("number"==typeof e)return e;if(r(e))return f;if(o(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=o(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(d,"");var n=p.test(e);return n||m.test(e)?b(e.slice(2),n?2:8):l.test(e)?f:+e}var u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},c="Expected a function",f=NaN,s="[object Symbol]",d=/^\s+|\s+$/g,l=/^[-+]0x[0-9a-f]+$/i,p=/^0b[01]+$/i,m=/^0o[0-7]+$/i,b=parseInt,v="object"==("undefined"==typeof t?"undefined":u(t))&&t&&t.Object===Object&&t,y="object"==("undefined"==typeof self?"undefined":u(self))&&self&&self.Object===Object&&self,g=v||y||Function("return this")(),h=Object.prototype,w=h.toString,k=Math.max,x=Math.min,j=function(){return g.Date.now()};e.exports=n}).call(t,function(){return this}())},function(e,t){"use strict";function n(e,t){a.push({selector:e,fn:t}),!u&&r&&(u=new r(o),u.observe(i.documentElement,{childList:!0,subtree:!0,removedNodes:!0})),o()}function o(){for(var e,t,n=0,o=a.length;n<o;n++){e=a[n],t=i.querySelectorAll(e.selector);for(var r,u=0,c=t.length;u<c;u++)r=t[u],r.ready||(r.ready=!0,e.fn.call(r,r))}}Object.defineProperty(t,"__esModule",{value:!0});var i=window.document,r=window.MutationObserver||window.WebKitMutationObserver,a=[],u=void 0;t.default=n},function(e,t){"use strict";function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(){return navigator.userAgent||navigator.vendor||window.opera||""}Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(t,n,o){return n&&e(t.prototype,n),o&&e(t,o),t}}(),r=/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i,a=/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i,u=/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i,c=/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i,f=function(){function e(){n(this,e)}return i(e,[{key:"phone",value:function(){var e=o();return!(!r.test(e)&&!a.test(e.substr(0,4)))}},{key:"mobile",value:function(){var e=o();return!(!u.test(e)&&!c.test(e.substr(0,4)))}},{key:"tablet",value:function(){return this.mobile()&&!this.phone()}}]),e}();t.default=new f},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(e,t,n){var o=e.node.getAttribute("data-aos-once");t>e.position?e.node.classList.add("aos-animate"):"undefined"!=typeof o&&("false"===o||!n&&"true"!==o)&&e.node.classList.remove("aos-animate")},o=function(e,t){var o=window.pageYOffset,i=window.innerHeight;e.forEach(function(e,r){n(e,i+o,t)})};t.default=o},function(e,t,n){"use strict";function o(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var i=n(12),r=o(i),a=function(e,t){return e.forEach(function(e,n){e.node.classList.add("aos-init"),e.position=(0,r.default)(e.node,t.offset)}),e};t.default=a},function(e,t,n){"use strict";function o(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var i=n(13),r=o(i),a=function(e,t){var n=0,o=0,i=window.innerHeight,a={offset:e.getAttribute("data-aos-offset"),anchor:e.getAttribute("data-aos-anchor"),anchorPlacement:e.getAttribute("data-aos-anchor-placement")};switch(a.offset&&!isNaN(a.offset)&&(o=parseInt(a.offset)),a.anchor&&document.querySelectorAll(a.anchor)&&(e=document.querySelectorAll(a.anchor)[0]),n=(0,r.default)(e).top,a.anchorPlacement){case"top-bottom":break;case"center-bottom":n+=e.offsetHeight/2;break;case"bottom-bottom":n+=e.offsetHeight;break;case"top-center":n+=i/2;break;case"bottom-center":n+=i/2+e.offsetHeight;break;case"center-center":n+=i/2+e.offsetHeight/2;break;case"top-top":n+=i;break;case"bottom-top":n+=e.offsetHeight+i;break;case"center-top":n+=e.offsetHeight/2+i}return a.anchorPlacement||a.offset||isNaN(t)||(o=t),n+o};t.default=a},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(e){for(var t=0,n=0;e&&!isNaN(e.offsetLeft)&&!isNaN(e.offsetTop);)t+=e.offsetLeft-("BODY"!=e.tagName?e.scrollLeft:0),n+=e.offsetTop-("BODY"!=e.tagName?e.scrollTop:0),e=e.offsetParent;return{top:n,left:t}};t.default=n},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(e){e=e||document.querySelectorAll("[data-aos]");var t=[];return[].forEach.call(e,function(e,n){t.push({node:e})}),t};t.default=n}])});
;
caa=window.caa||{},caa.components=caa.components||{},caa.components.caaCarousel=function($){function caaCarousel(id,options){this.options=options,this.format=options.format||FORMAT,this.$element=id,this.$selector=id.selector,this.place=CURRENT_POS,this.sceneIndex=CURRENT_INDX,this.scene=this.$element.find(".carousel-inside"),this.cellType=options.cell||".cell",this.query=Modernizr.mq("(max-width: 768px)"),this.sceneCount=this.scene.children(this.cellType).length,this.cellWidth="card-feed"==options.format?this.scene.find(this.cellType).width()+7:this.scene.find(this.cellType).width(),this.cellVW=(this.cellWidth/document.documentElement.clientWidth*100).toFixed(),"video"==options.format?this.sceneWidth=this.sceneCount*this.cellVW+14:this.sceneWidth=this.sceneCount*this.cellVW,this.options.variation?this.scene.css("width",100*this.sceneCount+"%"):this.scene.css("width",this.sceneWidth+"vw"),this._onload(),this._registerHandlers(),this._mobileHandler()}var FORMAT;FORMAT="overlay",CURRENT_POS=0,CURRENT_INDX=0;return caaCarousel.prototype._onload=function(){var view=this;1==this.sceneCount?($("#"+this.$element[0].id+" .indicator-container").hide(),$("#"+this.$element[0].id+" .carousel-actions").hide(),$("#"+this.$element[0].id+" .carousel-inside").addClass("single")):$("#"+this.$element[0].id+" .arrow-right").css({opacity:"1",cursor:"pointer"}),this.createIndicators(this.sceneCount),"variable-height"==this.format&&setTimeout(function(){view.scene.find(view.cellType).css("height",view.scene.find(view.cellType+":first-child").find(".cont").height()+30)},500)},caaCarousel.prototype._registerHandlers=function(){var view=this;this.$element.on("click",".indicator-container a",function(e){view.gotoscene($(this).index()),view.updateIndicators($(this).index())}),this.$element.on("click",".carousel-prev",function(e){"disabled"!==$(this).attr("disabled")&&view.carouselPrev()}),this.$element.on("click",".carousel-next",function(e){"disabled"!==$(this).attr("disabled")&&view.carouselNext()})},caaCarousel.prototype._mobileHandler=function(){var view=this;"video"!=this.options.format||this.query||view.sceneCount<=3*(view.sceneIndex+1)&&($("#"+this.$element[0].id+" .indicator-container").hide(),$("#"+this.$element[0].id+" .carousel-actions").hide()),this.swipe=document.getElementById(this.$element[0].id);var swiped=new Hammer(this.swipe);swiped.on("swipeleft swiperight",function(ev){"swipeleft"===ev.type&&view.sceneIndex+1<view.sceneCount&&view.carouselNext(),"swiperight"===ev.type&&view.carouselPrev()})},caaCarousel.prototype.createIndicators=function(sceneCount){for(var i=1;i<sceneCount;i++)$("#"+this.$element[0].id+" .indicator-container").append('<a href="javascript:void(0)"></a>')},caaCarousel.prototype.updateIndicators=function(sceneIndex){$("#"+this.$element[0].id+" .indicator-container a").removeClass("active"),$("#"+this.$element[0].id+" .indicator-container a").eq(this.sceneIndex).addClass("active")},caaCarousel.prototype.gotoscene=function(index){var view=this;this.sceneIndex=index;var sceneCount="video"==view.options.format?this.sceneCount-3:this.sceneCount-1;this.place=parseInt(this.sceneIndex)*parseInt(this.cellVW),this.scene.velocity({marginLeft:-this.place+"vw"}),"variable-height"==view.format&&view.scene.find(view.cellType).css("height",view.scene.find(view.cellType).eq(view.sceneIndex).find(".cont").height()+30),this.manageActions(sceneCount)},caaCarousel.prototype.manageActions=function(sceneCount){$("#"+this.$element[0].id+".carousel-container").find(".carousel-prev"),$("#"+this.$element[0].id+".carousel-container").find(".carousel-next")},caaCarousel.prototype.carouselNext=function(){var sceneCount;sceneCount=this._videoTreatment(),this.sceneIndex!==sceneCount?this.sceneIndex+=1:this.sceneIndex=0,this.updateIndicators(),this._moveScene(),this._variableHeight(),this.manageActions(sceneCount)},caaCarousel.prototype.carouselPrev=function(){var sceneCount;sceneCount=this._videoTreatment(),this.sceneIndex>0?this.sceneIndex-=1:this.sceneIndex=sceneCount,this.updateIndicators(),this._variableHeight(),this._moveScene(),this.manageActions()},caaCarousel.prototype._videoTreatment=function(){var view=this;return"video"==view.options.format&&Modernizr.mq("(min-width: 768px)")?!(this.sceneIndex>=this.sceneCount)&&this.sceneCount-1:this.sceneCount-1},caaCarousel.prototype._moveScene=function(){var view=this;"variable-height"==view.format&&view.scene.find(view.cellType).css("height",view.scene.find(view.cellType).eq(view.sceneIndex).find(".cont").height()+30)},caaCarousel.prototype._variableHeight=function(){this.place=parseInt(this.sceneIndex)*parseInt(this.cellVW),this.options.variation?this.scene.velocity({marginLeft:-(100*parseInt(this.sceneIndex))+"%"}):"video"==this.format?(this.place=parseInt(this.sceneIndex)*($("#"+this.$element[0].id+" .cell").width()+20),this.scene.velocity({marginLeft:-this.place+"px"})):this.scene.velocity({marginLeft:-this.place+"vw"})},caaCarousel}(jQuery);

var globalModal=function($){var modal={};return modal.init=function(parent,id){var instance=$(parent).find(".modal"),content=document.getElementById(id);instance.find(".modal-target").html(content),instance.addClass("show"),$("body").on("click",".close-modal",function(){instance.removeClass("show")}),$("body").on("click",function(e){$(e.target).closest(".modal-content,.video-modal-trigger").length||instance.removeClass("show")})},modal}(jQuery);

!function(Drupal,$,window){"use strict";var view,self,query=($("#nav-trigger"),$(".nav-trigger.open"),Modernizr.mq("(max-width: 768px)"));Drupal.behaviors.globalNav={attach:function(context,settings){if($("body").on("click",".nav-trigger.nav-open",function(){actions.closeOverlay(),$(".nav-trigger").blur()}),$("body").on("click",".nav-trigger:not(.search-open,.open)",function(){actions.openOverlay()}),$("body").on("click",function(e){$(e.target).closest("#header,.confirmation-modal, #onetrust-consent-sdk, .btn-cookie-confirm,.nav-overlay,#nav-trigger,.search-trigger,.search-overlay, .global-nav a,.nav-variation,a.white-logo").length||actions.closeOverlay()}),$("body").on("click",".global-nav a.active",function(e){self=this,query&&actions.mobileStepUp()}),$("body").on("click",".js-clear-input",function(){$(".search-global").val(" ").focus()}),$("body").on("click",".js-close-search",function(){$(".search-container").removeClass("expand")}),!$(".site-header").parent().hasClass("animation-intro")&&!$(".node--type-speakers.node--view-mode-full").length){var siteHeader=$(".site-header").clone().addClass("cloned");$(".layout-container").append(siteHeader),$(window).on("scroll load",function(){$(window).scrollTop()>300?$(".site-header.cloned").addClass("show"):$(".site-header.cloned").removeClass("show")})}$("body").on("click",'.global-nav a[target="_self"]:not(.active)',function(e){self=this,$(this).closest("li").children("ul").length>=1&&(query?actions.mobileShowSub():actions.showSubNav())})}};var actions={openOverlay:function(obj){view=this,$(".nav-trigger").addClass("open nav-open"),$("body").addClass("nav-active"),$(".nav-overlay").addClass("open"),$(".nav-trigger").blur(),this.removeClassesRecursive()},closeOverlay:function(){view=this,$("body").removeClass("nav-active"),$(".nav-overlay").removeClass("open").addClass("close"),$(".nav-trigger").removeClass("open"),$(".nav-trigger").blur(),setTimeout(function(){view.removeClassesRecursive(),$(".nav-overlay").removeClass("close")},800)},showSubNav:function(){var nav=$(self).parent().parent("ul").find("ul"),cleanFirst=$(self).parent().parent("ul").find("ul").hasClass("select");cleanFirst?(nav.removeClass("fadeInUp").addClass("fadeOutUp"),setTimeout(function(){$(self).parent().parent("ul").find("ul").removeClass("select"),view.showChildren()},450)):query?setTimeout(function(){view.showChildren()},400):view.showChildren()},showChildren:function(){var view=this;$(self).parent().parent("ul").find("a").removeClass("active"),$(self).addClass("active");var nav=$(self).closest("li").children("ul");nav.removeClass("fadeOutUp").addClass("select fadeInUp"),query&&view.containScroll(nav)},removeClassesRecursive:function(obj){$(".global-nav").find("ul,li").removeAttr("class"),$(".global-nav").find("a").removeClass("active sub-selected"),$(".search-container").removeClass("expand"),query&&($(".global-nav").find("ul,li,a").removeAttr("style"),$(".menu-container").css("height","0px"))},containScroll:function(obj){var getHeight,size=obj.children("li").length;getHeight=40*size+250,$(".nav-overlay").animate({scrollTop:0},"medium",function(){$(".menu-container").css({height:getHeight+"px"})})},mobileStepUp:function(){$(self).parent().parent("ul").hasClass("select")?($(self).siblings("ul").removeClass("select fadeInUp"),$(self).removeClass("active").parent("li").removeAttr("style").siblings("li").css({visibility:"visible"}).animate({opacity:"1"})):($(self).siblings("ul").animate({opacity:"0"}),setTimeout(function(){$(".menu-container .overlay-footer").fadeIn("400"),actions.removeClassesRecursive()},400),setTimeout(function(){$(self).siblings("ul").removeAttr("style")},600));var nav=$(self).parent().parent("ul");this.containScroll(nav)},mobileShowSub:function(){var active=$(self).parent("li"),siblings=active.siblings().children("a");siblings.animate({opacity:"0"}),active.siblings().animate({opacity:"0"}),$(".menu-container .overlay-footer").fadeOut("400"),setTimeout(function(){active.css("top",0)},300),setTimeout(function(){actions.showSubNav(),siblings.parent("li").css({visibility:"hidden"})},400)}}}(Drupal,jQuery,this);

!function(Drupal,$,window){Drupal.behaviors.globalscripts={attach:function(context,settings){window.odometerOptions={duration:2e3,animation:"count"};var windowWidth=$(window).width()>768?"desktop":"mobile";$(window).resize(function(){if("desktop"===windowWidth&&$(window).width()<768||"mobile"===windowWidth&&$(window).width()>768)return void location.reload()}),Modernizr.mq("(max-width: 735px)")&&($(".hero-container")[0]&&$($(".hero-container").find("img")).each(function(){var mobileImageSrc=$(this).data("mobile");(mobileImageSrc.indexOf(".jpeg")>-1||mobileImageSrc.indexOf(".jpg")>-1||mobileImageSrc.indexOf(".png")>-1)&&$(this).attr("src",mobileImageSrc)}),$(".tout-module")[0]&&$($(".tout-module").find("img")).each(function(){var mobileImageSrc=$(this).data("mobile");(mobileImageSrc.indexOf(".jpeg")||mobileImageSrc.indexOf(".jpg")>-1||mobileImageSrc.indexOf(".png")>-1)&&$(this).attr("src",mobileImageSrc)})),Modernizr.mq("(max-width: 768px)")&&$(window).on("resize",function(e){$(".hero-container")[0]&&(Modernizr.mq("(max-device-width: 812px) and (orientation: landscape)")?$($(".hero-image-container").find("img")).each(function(){$(this).data("desktop").length>2&&$(this).attr("src",$(this).data("desktop"))}):Modernizr.mq("(max-device-width: 735px) and (orientation: portrait)")&&$($(".hero-image-container").find("img")).each(function(){var mobileImageSrc=$(this).data("mobile");(mobileImageSrc.indexOf(".jpeg")>-1||mobileImageSrc.indexOf(".jpg")>-1||mobileImageSrc.indexOf(".png")>-1)&&$(this).attr("src",mobileImageSrc)}))}),$(window).on("load",function(e){AOS.init({offset:0,duration:600,easing:"ease-in-out",delay:100,once:!0}),$(".preloader").fadeOut(1e3),$("body").removeClass("loading-scene"),$(".hero-container").hasClass("bg-white")&&$(".site-header").addClass("header-grey"),$("body").on("click",".trigger-scroll-up",function(){return $("html, body").animate({scrollTop:0},"slow"),!1}),$("body").on("click",".ui-widget-overlay",function(){$(".ui-dialog-titlebar-close").trigger("click")}),$("body").on("click",".shortlist-trigger",function(e){e.preventDefault(),$(this).toggleClass("active");$(this).data("speakerid");$(this).find(".shortlist-text").html(function(i,obj){return"Add to shortlist"==obj?"Remove from shortlist":"Add to shortlist"})}),$(".hero-text-container h5,.hero-text-container h1,.hero-text-container h2,.hero-text-container a,.hero-text-container button").hoverIntent(function(){$(".hero-image-container").addClass("overlay")},function(){$(".hero-image-container").removeClass("overlay")}),$(".form-btn").click(function(){var type=$(this).attr("data-type"),artist=$(this).attr("data-artist"),artistName=$(this).attr("data-artist-name"),primaryGenre=$(this).attr("data-primary-genre");$("input[name=type]").val(type),$("input[name=genre]").val(primaryGenre),$("input[name=artist]").val(artist),$("input[name=artist_name]").val(artistName),$("#contact_form").fadeIn("slow")}),$("body").on("click",".book-speaker",function(e){e.preventDefault();var speakerid=$(this).data("speakerid");console.log("passed value of "+speakerid)}),$("body").on("click",".find-your-speaker",function(e){e.preventDefault();var speakerCategory=$(this).data("speakercategory");speakerCategory?console.log("open browse with "+speakerCategory+" selection"):console.log("open browse no preselection")}),$(".section-entertainmenttalent #main").before($(".sticky-header")),$("body").on("click",".toggle-footer",function(){$("#footer").toggleClass("open"),$(".expanded-footer").slideToggle(888,"swing"),$(this).toggleClass("active"),$("html, body").animate({scrollTop:$(document).height()},888),$(this).attr("aria-expanded",function(i,attr){return"true"==attr?"false":"true"})});var query=Modernizr.mq("(max-width: 768px)");$("body").on("click",'a[href="#contact-form"]',function(e){e.preventDefault();var contactTop=query?$(".contact-us").offset().top-80:$(".contact-us").offset().top;$("html, body").animate({scrollTop:contactTop},500)})});var getVariables=[];window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi,function(a,name,value){getVariables[name]=value}),"undefined"!=typeof getVariables.utm_campaign&&setCookie("utm_campaign",getVariables.utm_campaign,365)}}}(Drupal,jQuery,this);

!function(Drupal,$,window){Drupal.behaviors.headerSearch={attach:function(context,settings){$("body").on("click",".search-trigger",function(e){e.preventDefault(),$("body").toggleClass("search-active"),$(".search-trigger").addClass("hide").attr("disabled","disabled"),Modernizr.mq("(min-width: 768px)")&&$(".search-trigger-container").addClass("show-x"),$(".nav-trigger").addClass("open search-open"),$("body").removeClass("nav-active"),$(".nav-overlay").removeClass("open").addClass("close"),$(".search-input-container input").focus(),setTimeout(function(){$(".nav-overlay").removeClass("close")},800)}),$("body").on("click",".nav-trigger.open.search-open,.close-x",function(){$("body").removeClass("search-active"),$(".nav-trigger").removeClass("open search-open"),$(".search-trigger-container").removeClass("show-x"),$(".search-trigger").removeClass("hide").removeAttr("disabled")})}}}(Drupal,jQuery,this);

!function(Drupal,$,window){Drupal.behaviors.caaArtistFill={attach:function(context){const artist=$(".sticky-header h4",context),artistName=artist.text(),artistField=$('#edit-artist-interested-in option[value="'+artistName+'"]');artist.length&&($("#edit-artist-interested-in option:first-child").attr("selected",!1),artistField.attr("selected","selected"))}},Drupal.behaviors.formOverlay={attach:function(context,settings){$(window).on("load",function(){var target;if(window.location.hash){var getUrl=$('a[href="'+window.location.hash+'"]').attr("href"),type=$('a[href="'+window.location.hash+'"]').data("type"),artist=$('a[href="'+window.location.hash+'"]').data("artist"),target="modal"==type?".form-overlay-container":".form-container";actions.loadForm(getUrl,type,target,artist)}$("#contact-us-touring-forms .form-actions").each(function(idx,formActionDiv){$(formActionDiv).prepend("<a href='javascript:void(0)' class='btn btn-secondary back-form'>Back</a>")}),$("body").on("click",".form-btn.form-overlay",function(e){e.preventDefault(),e.stopPropagation();var getUrl=$(this).attr("href"),type=$(this).data("type"),artist=$(this).data("artist"),target="modal"==type?".form-overlay-container":".form-container";window.location.hash=getUrl,actions.loadForm(getUrl,type,target,artist)}),$("body").on("click",".scroll-to-contact",function(e){e.preventDefault(),e.stopPropagation(),Modernizr.mq("(max-width: 768px)")?$("html, body").animate({scrollTop:$(".contact-us").offset().top-80},500):$("html, body").animate({scrollTop:$(".contact-us").offset().top},500)}),$("body").on("click",".exit-form",function(e){e.stopPropagation(),$(".form-overlay-container").slideUp(600,function(){actions.unlock(),$(".form-overlay-container").children("div").first().appendTo(".form-roster-container"),$(".sticky-header").removeClass("form-inview"),$(".site-header-container").show(),$(".site-header").css("z-index",6),$(".form-overlay-container").removeClass("show"),window.location.hash="",$("body").removeClass("overlay-print")})}),$("body").on("click",".back-form",function(e){e.preventDefault(),e.stopPropagation(),$(".contact-us .form-container").slideUp(400),$(".contact-us .actions-container").delay(600).fadeIn()})})}};var thisForm,scrollPos,formActions='<div class="action-row"><a href="javascript:void(0)" class="btn btn-secondary back-form">Back</a><a href="javascript:void(0)" class="btn btn-secondary send-form">Send Form</a></div>',actions={loadForm:function(getUrl,type,target,artist){const formToView=$(".contact-us .form-container").find(getUrl);formToView.length>0&&(thisForm=new caa.components.formFlow(getUrl,artist),$(".contact-us .actions-container").fadeOut(400),$(".contact-us .form-container").children().hide(),$(".contact-us .form-container").show(),$(formToView).delay(400).slideDown())},swapContents:function(target,artist){thisForm={},thisForm=new caa.components.formFlow(".form-container",artist),$(".contact-us .actions-container").fadeOut(400),$(".contact-us .offer-inquiry-container").slideUp(400),$(".form-container .form-actions").hide(),$(".form-container .action-row").remove(),$(".form-container form").append(formActions),$(".contact-us .form-container").delay(800).slideDown()},openOverlay:function(target,artist){scrollPos=window.pageYOffset,$(".sticky-header").addClass("form-inview"),$(".form-overlay-container").css("top",scrollPos),$(".site-header-container").hide(),$(".site-header").css("z-index",1),$('.form-overlay-container input[name="artist"]').val(artist),$("body").addClass("overlay-print"),$(".form-overlay-container").attr({label:"offer form",tabindex:-1}).focus(),$(target).delay(600).show().addClass("show"),this.lockbg()},lockbg:function(){$("body").css({position:"fixed",overflow:"hidden",top:-scrollPos+"px"})},unlock:function(){$("body").css({position:"relative",overflow:"auto",top:0}),$("html, body").animate({scrollTop:scrollPos},0)}}}(Drupal,jQuery,this);

caa=window.caa||{},caa.components=caa.components||{},caa.components.formFlow=function($){function formFlow(id,artist){this.xform=$(this).closest("form").get(0),0!=$(id).length&&(this.isForm=$(id).find("form"),this.query=Modernizr.mq("(max-width: 768px)"),this.formname=this.isForm.get(0),this.titleOut=!1,this.artist=artist,this.EU=["Austria","Belgium","Bulgaria","Croatia","Cyprus","Czech Republic","Denmark","Estonia","Finland","France","Germany","Greece","Hungary","Ireland","Italy","Latvia","Lithuania","Luxembourg","Malta","Netherlands","Poland","Portugal","Romania","Slovakia","Slovenia","Spain","Sweden","Switzerland","United Kingdom"],this.countryOrigin=null,this._onload(),this._formAnimations(),this._registerHandlers(),this._updateForm(),this._validateInput(),this._EUconfirmation())}return formFlow.prototype._onload=function(){var view=this;this.isForm[0]&&view._validateInput(this.isForm.get(0)),!this.query,this._selectAlias(),$("#"+this.formname.id+" .artist").val(this.artist),$("#"+this.formname.id+" input").each(function(){""!==$(this).val()&&$(this).parent().addClass("focus")}),$("#"+this.formname.id).find(".webform-message")&&$(".webform-message").remove(),$("#"+this.formname.id+" #edit-speakers-interested-in").each(function(){$(this).val().length&&$(this).parent().addClass("focus")})},formFlow.prototype._validationEmail=function(email){var re=/^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;return re.test(email)},formFlow.prototype._formAnimations=function(){var view=this;$("#"+this.formname.id).on("focus",'input[type="text"],input[type="email"], select',function(){$(this).closest(".form-item").addClass("focus")}),$("#"+this.formname.id).on("focus","textarea",function(){$(this).closest(".js-form-type-textarea").addClass("focus")}),$("#"+this.formname.id).on("blur","textarea",function(){null!==$(this).val()&&""!==$(this).val()||$(this).closest(".js-form-type-textarea").removeClass("focus")}),$("#"+this.formname.id).on("focus",".iti__selected-flag, .form-tel",function(){$(this).closest(".form-item").addClass("focus")}),$("#"+this.formname.id).on("change",".form-select.required",function(){$("#"+view.formname.id+" .js-form-type-textarea").removeClass("hide")}),$("#"+this.formname.id).on("blur","input",function(){var view=this;$(this).hasClass("hasDatepicker")?setTimeout(function(){null!==$(view).val()&&""!==$(view).val()||$(view).parent().removeClass("focus")},400):null!==$(this).val()&&""!==$(this).val()||$(this).parent().removeClass("focus")})},formFlow.prototype._registerHandlers=function(formname){var view=this;$("#"+this.formname.id).on("keyup","input",function(){view._validateInput(this.xform)}),$("#"+this.formname.id).on("change","select.required",function(){view._validateInput(this.xform);var thisVal=$(this).val();view._additionalConsent(thisVal)}),$("#"+this.formname.id).on("change keyup keydown paste cut","textarea",function(){$(this).height(0).height(this.scrollHeight),view._validateInput(this.xform)}).find("textarea").change(),$("#"+this.formname.id).on("blur",'input[type="email"]',function(){view._validationEmail($(this).val())?$(this).parent().removeClass("error").addClass("valid"):$(this).parent().removeClass("valid").addClass("error")}),$("body").on("click","#"+view.formname.id+" .send-form",function(e){e.preventDefault(),$("#"+view.formname.id).submit(),$(this).attr("disabled","disabled")})},formFlow.prototype._EUconfirmation=function(){var view=this,form=document.getElementById(this.formname.id);$("#"+this.formname.id).submit(function(e){e.preventDefault();var get=!!$("#"+view.formname.id).find(".eu-flag select").val()&&$("#"+view.formname.id).find(".eu-flag select").val();view._additionalConsent(get)?($(".eu-agree-modal").show(),$("html,body").animate({scrollTop:$(".eu-agree-modal").offset().top-100},"slow")):"undefined"!=typeof grecaptcha&&form.querySelectorAll(".g-recaptcha").length?($(".captcha .warning").fadeOut(),gRecaptchaResponse=form.querySelector(".g-recaptcha-response"),gRecaptchaResponse&&gRecaptchaResponse.value&&gRecaptchaResponse.value.length>0?(form.submit(),$("body").addClass("loading-scene")):($(".captcha .warning").fadeIn("slow"),$("body").removeClass("loading-scene"))):($("body").addClass("loading-scene"),form.submit())}),$(".contact-us").on("click",function(e){$(e.target).closest(".eu-agree-modal").length||($(".eu-agree-modal").hide(),$(".contact-us").off("click"),$(".default").show(),$(".more-legal").hide())}),$(".default .more").on("click",function(){$(".default").fadeOut(),$(".more-legal").fadeIn()}),$(".close-modal").on("click",function(){$(".eu-agree-modal").hide(),$(".contact-us").off("click")}),$(".eu-gateway-iagree").on("click",function(){$(this).is(":checked")?$(".eu-gateway").removeAttr("disabled"):$(".eu-gateway").attr("disabled","disabled")}),$(".eu-gateway").on("click",function(){form.submit()})},formFlow.prototype._updateForm=function(formname){var view=this;if($("#"+this.formname.id).closest(".contact-us").data("row")&&!this.query){this.totalFields=$("#"+this.formname.id+" .form-item").length;$("#"+this.formname.id).on("focus","input,select,.iti__selected-flag",function(){var wrap=$(this);view._animateIn(wrap)}),$("#"+this.formname.id).on("focus","textarea",function(){var wrap=$(this);view._animateIn(wrap,!0)})}},formFlow.prototype._selectAlias=function(formname){$("#"+this.formname.id+" .form-select").on("change",function(){$(this).parent().find(".select-alias").text($(this).find(":selected").text())}),$("#"+this.formname.id).on("focus","select",function(e){e.preventDefault();var isStyledSelect=$(this).parent("");isStyledSelect&&$(isStyledSelect).addClass("infocus")}),$("#"+this.formname.id+" .js-form-type-select").each(function(){if(!$(this).hasClass("form-item-speakers-interested-in")){var thisVal=$(this).find("select").find(":selected").text();$(this).append('<div class="select-alias">'+thisVal+"</div>"),""!==$(this).find("select").find(":selected").val()&&$(this).addClass("focus")}})},formFlow.prototype._additionalConsent=function(val){var EUArray=this.EU,test=$.inArray(val,EUArray);return test!=-1},formFlow.prototype._validateInput=function(formname){var replyActiveFlag=!0;$("#"+this.formname.id+" .webform-webform-telephone-international").each(function(){$(this).removeAttr("placeholder")}),$("#"+this.formname.id+" input.required, #"+this.formname.id+" select.required, #"+this.formname.id+" textarea.required").each(function(){0===$(this).val().length&&(replyActiveFlag=!1)}),replyActiveFlag===!0?$("#"+this.formname.id+' input[type="submit"]').removeAttr("disabled"):$("#"+this.formname.id+' input[type="submit"]').attr("disabled","disabled")},formFlow.prototype._animateIn=function(wrap,textarea){(wrap.closest(".form-item").index()%2!==0&&wrap.closest(".form-item").index()<this.totalFields||textarea)&&((1===wrap.closest(".form-item").index()&&$(".title-target h5")[0]||1===wrap.closest(".form-item").index()&&$(".title-target div.h7")[0])&&($(".title-target h5")[0]&&$(".title-target div.h7")[0]?$(".title-target").addClass("fadeUpLrg"):$(".title-target").addClass("fadeUp")),$("#"+this.formname.id+" .form-item").eq(wrap.closest(".form-item").index()+1).removeClass("hide"),$("#"+this.formname.id+" .form-item").eq(wrap.closest(".form-item").index()+2).removeClass("hide"))},formFlow}(jQuery);

caa=window.caa||{},caa.components=caa.components||{},caa.components.longForm=function($){function longForm(id,artist){this.id=id,this.xform=$(this).closest("form").get(0),this.isForm=$(id).find("form"),this.query=Modernizr.mq("(max-width: 768px)"),this.formname=this.isForm.get(0),this.artist=artist,this.titleOut=!1,this.EU=["Austria","Belgium","Bulgaria","Croatia","Cyprus","Czech Republic","Denmark","Estonia","Finland","France","Germany","Greece","Hungary","Ireland","Italy","Latvia","Lithuania","Luxembourg","Malta","Netherlands","Poland","Portugal","Romania","Slovakia","Slovenia","Spain","Sweden","Switzerland","United Kingdom"],this._registerHandlers(),this._onload(),this._formAnimations(),this._manageScenes(),this._EUconfirmation(),this._previewSave(),this._sameAsAbove()}return longForm.prototype._onload=function(formname){this.query||this._selectAlias(),this._hideNextScene(),this.sceneLength=$("#"+this.formname.id+" > .form-wrapper:not(.form-actions)").length,$("#"+this.formname.id+" .artist").val(this.artist),$("#"+this.formname.id).find(".warning")&&$(".warning").hide(),$("#"+this.formname.id).find(".webform-message")&&$(".webform-message").remove(),$("#"+this.formname.id+" input").each(function(){""!==$(this).val()&&($(this).hasClass("js-webform-telephone-international")?$(this).parent().parent().addClass("focus"):$(this).parent().addClass("focus"))}),$("#"+this.formname.id+" textarea").each(function(){""!==$(this).val()&&$(this).parent().parent().addClass("focus")}),$("#"+this.formname.id).on("focus","select",function(e){e.preventDefault();var isStyledSelect=$(this).parent("");isStyledSelect&&$(isStyledSelect).addClass("infocus")})},longForm.prototype._hideNextScene=function(formname){const formPage=$(".page-form-christian-touring-inquiry-form, .page-form-christian-touring-offer-form");var reviewInquiry=("#offers-form"===this.id?"Review Offer":"Review Inquiry",'<div class="action-row"><span class="red warning">Missing fields indicated in red above.</span><a href="javascript:void(0)" class="btn btn-white exit-form">Exit</a><a href="javascript:void(0)" class="btn btn-red send-form" disabled="disabled">Send Form</a></div>'),pageInquiry='<div class="action-row"><span class="red warning">Missing fields indicated in red above.</span><a href="/christian-music" class="btn btn-white exit-form">Exit</a><a href="javascript:void(0)" class="btn btn-red send-form" disabled="disabled">Send Form</a></div>';this.sceneLength=$("#"+this.formname.id+" > .form-wrapper:not(.form-actions)").length;var webform=$(".webform-submission-form");$("#"+this.formname.id+" .artist").val(this.artist),formPage.length?webform.append(pageInquiry):webform.append(reviewInquiry),$("#"+this.formname.id).find(".form-wrapper").first().slideDown()},longForm.prototype._formAnimations=function(formname){$("#"+this.formname.id).on("focus",'input[type="text"],input[type="number"],input[type="email"], select',function(){$(this).closest(".form-item").addClass("focus")}),$("#"+this.formname.id).on("focus","textarea",function(){$(this).closest(".js-form-type-textarea").addClass("focus")}),$("#"+this.formname.id).on("blur","textarea",function(){null!==$(this).val()&&""!==$(this).val()||$(this).closest(".js-form-type-textarea").removeClass("focus")}),$("#"+this.formname.id).on("focus",".iti__selected-flag, .form-tel",function(){$(this).closest(".form-item").addClass("focus")}),$("#"+this.formname.id).on("blur","input",function(){var view=this;$(this).hasClass("hasDatepicker")?setTimeout(function(){null!==$(view).val()&&""!==$(view).val()||$(view).parent().removeClass("focus")},800):null!==$(this).val()&&""!==$(this).val()||$(this).parent().removeClass("focus")})},longForm.prototype._sameAsAbove=function(formname){var view=this;$("#"+this.formname.id+" .same-as-above").length&&(view._sameAsAboveValidate(),$("#"+this.formname.id).on("keyup",".first-name-target,.last-name-target,.phone-target,.email-target",function(){view._sameAsAboveValidate()}),$("#"+this.formname.id).on("change",".same-as-above input",function(){$(this).is(":checked")?($(this).parent().parent().parent().find('input[id*="first-name"]').val(view.sameas.first_name).prop("readonly",!0).parent().addClass("focus"),$(this).parent().parent().parent().find('input[id*="last-name"]').val(view.sameas.last_name).prop("readonly",!0).parent().addClass("focus"),$(this).parent().parent().parent().find('input[id*="phone-number"]').val(view.sameas.phone).prop("readonly",!0).parent().addClass("focus"),$(this).parent().parent().parent().find('input[id*="email"]').val(view.sameas.email).prop("readonly",!0).parent().addClass("focus")):($(this).parent().parent().parent().find('input[id*="first-name"]').val("").prop("readonly",!1).parent().removeClass("focus"),$(this).parent().parent().parent().find('input[id*="last-name"]').val("").prop("readonly",!1).parent().removeClass("focus"),$(this).parent().parent().parent().find('input[id*="phone-number"]').val("").prop("readonly",!1).parent().removeClass("focus"),$(this).parent().parent().parent().find('input[id*="email"]').val("").prop("readonly",!1).parent().removeClass("focus"))}))},longForm.prototype._sameAsAboveValidate=function(formname){view=this,$(".first-name-target").val().length>0||$(".last-name-target").val().length>0||$(".phone-target").val().length>0||$(".email-target").val().length>0?($(".same-as-above").removeClass("disabled"),$(".same-as-above input").removeAttr("disabled"),this.sameas={first_name:$(".first-name-target").val(),last_name:$(".last-name-target").val(),email:$(".email-target").val(),phone:$(".phone-target").val()}):($(".same-as-above").addClass("disabled"),$(".same-as-above input").attr("disabled","disabled"))},longForm.prototype._registerHandlers=function(formname){var view=this;$("#"+this.formname.id).on("blur","input.required, select.required",function(){$(this).hasClass("hasDatepicker")?setTimeout(function(){0===$(this).val().length?$(this).parent().addClass("error"):$(this).parent().removeClass("error")},800):0===$(this).val().length?$(this).parent().addClass("error"):$(this).parent().removeClass("error")}),$("#"+this.formname.id).on("blur",".error input.required, .error select.required",function(){view._previewValidate()}),$("#"+this.formname.id).on("change keyup keydown paste cut","textarea",function(){$(this).height(0).height(this.scrollHeight)}).find("textarea").change(),$("#"+this.formname.id+" .form-select").on("change",function(){$(this).parent().find(".select-alias").text($(this).find(":selected").text())}),$("#"+this.formname.id).on("blur",'input[type="email"]',function(){view._validationEmail($(this).val())?$(this).parent().removeClass("error").addClass("valid"):$(this).parent().removeClass("valid").addClass("error")}),$("#"+this.formname.id).on("click",".show-middle-buyer input",function(){$(this).is(":checked")?$(".middle-buyer-show-hide").slideDown():$(".middle-buyer-show-hide").slideUp()}),$("#"+this.formname.id).on("blur","textarea.required",function(){0===$(this).val().length?$(this).parent().parent().addClass("error"):$(this).parent().parent().removeClass("error")}),$("#"+this.formname.id).on("click",'.required input[type="radio"]',function(){var name=$(this).attr("name");$("input[name="+name+"]:checked").length>0?$(this).closest("fieldset").removeClass("error"):$(this).closest("fieldset").addClass("error")}),$("#"+this.formname.id).on("click",".show-expenses input",function(){$(this).is(":checked")?($("#edit-expenses--2, #edit-other-expenses--2,.expenses-show-hide").slideDown(),$("#edit-scene-11--2,.expenses-show-hide-flat").show()):($("#edit-expenses--2, #edit-other-expenses--2,.expenses-show-hide").slideUp(),$("#edit-scene-11--2,.expenses-show-hide-flat").hide())})},longForm.prototype._manageSubmit=function(formname){var view=this,submitted=!1,$form=$("#"+this.formname.id);$form.on("keyup","input.required",function(){view._validateInput(this.xform)}),$("body").on("blur",".review-request input.required,.review-request select.required",function(){view._previewValidate()}),submitted||($form.find(".send-form").addClass("submitting"),$form.submit(),submitted=!0)},longForm.prototype._previewSave=function(formname){var view=this;$("body").on("click",".save-form",function(){$(".save-form").addClass("flash-white"),setTimeout(function(){$(".save-form").text("Form Saved")},400),setTimeout(function(){$(".save-form").text("Save and Finish Later").removeClass("flash-white")},3e3),$("#"+view.formname.id).is(":visible")&&($("#"+view.formname.id+" .webform-button--draft").click(),$("#"+view.formname.id).bind("DOMSubtreeModified",function(){location.reload()}))}),$("body").on("click","#"+view.formname.id+" .send-form",function(e){e.preventDefault(),"disabled"!==$(this).attr("disabled")&&view._manageSubmit()}),$("body").on("click","#"+view.formname.id+" .send-form[disabled=disabled]",function(e){e.preventDefault(),view._previewValidate(!0),view._previewhighlight(),view._validateScrollTo()})},longForm.prototype._manageScenes=function(formname){var view=this;$("#"+this.formname.id).on("click",".toggle-edit",function(e){e.preventDefault(),$("#"+view.formname.id+" > .form-wrapper").slideUp(),$("#"+view.formname.id+" .form-item").removeClass("edit-mode"),$(this).closest(".form-item").toggleClass("edit-mode").next(".form-wrapper").slideToggle()}),this.query&&$("#"+this.formname.id).on("click",".scene-bar",function(e){e.preventDefault(),$("#"+view.formname.id+" > .form-wrapper").slideUp(),$("#"+view.formname.id+" .form-item").removeClass("edit-mode"),$(this).closest(".form-item").toggleClass("edit-mode").next(".form-wrapper").slideToggle()}),$("#"+this.formname.id).on("click",".next-form",function(e){e.preventDefault(),$("#"+view.formname.id+" > .form-wrapper").slideUp(),$("#"+view.formname.id+" .form-item").removeClass("edit-mode"),view._validateScene($(this).closest(".form-wrapper")),$(this).closest(".form-wrapper").next(".form-item").addClass("edit-mode").show(),$(this).closest(".form-wrapper").next().next(".form-wrapper").slideDown(),$(".form-overlay-container").animate({scrollTop:60*$(this).parent().parent().index()},"400")});var backandsave='<div class="action-row submit-row"><div class="incomplete">Please review your submission. <span class="red">* Required fields</span></div><div class="action-row"><a href="javascript:void(0)" class="btn btn-white exit-form">Exit</a><a href="javascript:void(0)" class="btn btn-red save-form">Save and finish later</a><a href="javascript:void(0)" class="btn btn-red send-form">Send Form</a></div>';$("#"+this.formname.id).on("click",".review-inquiry",function(e){e.preventDefault(),$("#"+view.formname.id+" > .form-wrapper").slideDown(),$("#"+view.formname.id+" .form-item").removeClass("edit-mode"),$("#"+view.formname.id).addClass("review-request"),$("#"+view.formname.id+" .action-row .exit-form").remove(),$(this).after(backandsave).hide(),$(".form-overlay-container").animate({scrollTop:"0"}),view._previewValidate()}),$("#"+this.formname.id).on("click",".back-form",function(e){e.preventDefault(),$("#"+view.formname.id+" > .form-wrapper").slideUp(),$("#"+view.formname.id).find(".form-wrapper").first().slideDown(),$("#"+view.formname.id).find(".form-item").first().addClass("edit-mode"),$("#"+view.formname.id).removeClass("review-request"),$(this).parent("div.action-row").remove(),$(".review-inquiry").show(),$(".form-overlay-container").animate({scrollTop:"0"})})},longForm.prototype._EUconfirmation=function(formname){var view=this;$("#"+this.formname.id).submit(function(e){e.preventDefault();var get=$("#"+view.formname.id).find(".eu-flag select").val();view._additionalConsent(get)?($(".form-overlay-container").hasClass("show")?$(".eu-agree-modal").css({position:"fixed"}).show():$(".eu-agree-modal").css({position:"absolute"}).show(),$("html,body").animate({scrollTop:$(".eu-agree-modal").offset().top-100},"slow")):($("#"+view.formname.id+" .webform-button--submit").trigger("click"),$("#"+view.formname.id+" .send-form").addClass("submitting"))}),$(".contact-us").on("click",function(e){$(e.target).closest(".eu-agree-modal").length||($(".eu-agree-modal").hide(),$(".contact-us").off("click"),$(".default").show(),$(".more-legal").hide())}),$(".default .more").on("click",function(){$(".default").fadeOut(),$(".more-legal").fadeIn()}),$(".close-modal").on("click",function(){$(".eu-agree-modal").hide(),$(".contact-us").off("click")}),$(".eu-gateway-iagree").on("click",function(){$(this).is(":checked")?$(".eu-gateway").removeAttr("disabled"):$(".eu-gateway").attr("disabled","disabled")}),$(".eu-gateway").on("click",function(){$("#"+view.formname.id+" .webform-button--submit").trigger("click"),$(this).attr("disabled","disabled").addClass("submitting"),setTimeout(function(){$(".eu-agree-modal").fadeOut(),$(".contact-us").off("click")},600),setTimeout(function(){$(".exit-form").trigger("click")},1200)})},longForm.prototype._validationEmail=function(email){var re=/^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;return re.test(email)},longForm.prototype._selectAlias=function(formname){$("#"+this.formname.id+" .js-form-type-select").each(function(){var thisVal=$(this).find("select").find(":selected").text();$(this).append('<div class="select-alias">'+thisVal+"</div>"),""!==$(this).find("select").find(":selected").val()&&$(this).addClass("focus")})},longForm.prototype._additionalConsent=function(val){var EUArray=this.EU,test=$.inArray(val,EUArray);return test!=-1},longForm.prototype._validateInput=function(formname){var replyActiveFlag=!0;$("#"+this.formname.id+" input.required").each(function(){0===$(this).val().length&&(replyActiveFlag=!1)}),replyActiveFlag===!0?$("#"+this.formname.id+' input[type="submit"]').removeAttr("disabled"):$("#"+this.formname.id+' input[type="submit"]').attr("disabled","disabled")},longForm.prototype._previewValidate=function(submitting){var showSubmit=!0,view=this;$("#"+this.formname.id+' input[type="text"].required, input[type="number"].required, #'+this.formname.id+" select.required").each(function(){0===$(this).val().length?showSubmit=!1:$(this).parent().removeClass("error")}),$("#"+this.formname.id+' input[type="email"].required').each(function(){view._validationEmail($(this).val())||(showSubmit=!1)}),$("#"+this.formname.id+' input[type="tel"].required').each(function(){0===$(this).val().length?showSubmit=!1:$(this).parent().parent().removeClass("error")}),$("#"+this.formname.id+" textarea.required").each(function(){0===$(this).val().length?showSubmit=!1:$(this).parent().parent().removeClass("error")}),$("#"+this.formname.id+' .required input[type="radio"]').each(function(){var name=$(this).attr("name");$("input[name="+name+"]:checked").length>0?$(this).closest("fieldset").removeClass("error"):showSubmit=!1}),showSubmit===!0?($("#"+this.formname.id+" .send-form").removeAttr("disabled"),submitting&&view._manageSubmit()):($("#"+this.formname.id+" .send-form").attr("disabled","disabled"),submitting&&$(".form-overlay-container").animate({scrollTop:"0"}))},longForm.prototype._previewhighlight=function(formname){var view=this;$("#"+this.formname.id+' input[type="text"].required, input[type="number"].required, #'+this.formname.id+" select.required").each(function(){0===$(this).val().length?$(this).parent().addClass("error"):$(this).parent().removeClass("error")}),$("#"+this.formname.id+' input[type="email"].required').each(function(){view._validationEmail($(this).val())||$(this).parent().addClass("error")}),$("#"+this.formname.id+' input[type="tel"].required').each(function(){0===$(this).val().length?$(this).parent().parent().addClass("error"):$(this).parent().parent().removeClass("error")}),$("#"+this.formname.id+" textarea.required").each(function(){0===$(this).val().length?$(this).parent().parent().addClass("error"):$(this).parent().parent().removeClass("error")}),$("#"+this.formname.id+' .required input[type="radio"]').each(function(){var name=$(this).attr("name");$("input[name="+name+"]:checked").length>0?$(this).closest("fieldset").removeClass("error"):$(this).closest("fieldset").addClass("error")})},longForm.prototype._validateScrollTo=function(formname){$(".error").length&&($(".warning").show(),$("body, html").animate({scrollTop:$(".error").first().position().top}))},longForm.prototype._validateScene=function(scene){var replyActiveFlag=!0,view=this;$(scene.find("input.required")).each(function(){0===$(this).val().length&&(replyActiveFlag=!1)}),$(scene.find('input[type="email"].required')).each(function(){view._validationEmail($(this).val())||(replyActiveFlag=!1)}),$(scene.find("select.required")).each(function(){0===$(this).val().length&&(replyActiveFlag=!1)}),replyActiveFlag===!0?(scene.prev(".form-item").addClass("passed"),scene.prev(".form-item").find(".incomplete").remove(),scene.find(".next-form").removeAttr("disabled")):(scene.prev(".form-item").removeClass("passed"),0===scene.prev(".form-item").find(".incomplete").length&&scene.prev(".form-item").find(".scene-meta").append('<span class="incomplete">incomplete</span>'),scene.find(".next-form").attr("disabled","disabled"))},longForm}(jQuery);

function setCookie(name,value,days){var expires="";if(days){var date=new Date;date.setTime(date.getTime()+24*days*60*60*1e3),expires="; expires="+date.toUTCString()}document.cookie=name+"="+(value||"")+expires+"; path=/"}function getCookie(name){for(var nameEQ=name+"=",ca=document.cookie.split(";"),i=0;i<ca.length;i++){for(var c=ca[i];" "==c.charAt(0);)c=c.substring(1,c.length);if(0==c.indexOf(nameEQ))return c.substring(nameEQ.length,c.length)}return null}function eraseCookie(name){document.cookie=name+"=; Max-Age=-99999999;"}

!function(Drupal,$,window){Drupal.behaviors.cookieConfirmation={attach:function(context,settings){$(window).on("load",function(e){var cookieName="cookie-confirmation";if($(".cookie-modal")[0]){var x=getCookie(cookieName);x||$(".cookie-modal").fadeIn(600).focus()}$("body").on("click",".btn-cookie-confirm",function(){$(".cookie-modal").fadeOut(600),setCookie(cookieName,"approved",9999)})})}}}(Drupal,jQuery,this);

var vis=function(){var stateKey,eventKey,keys={hidden:"visibilitychange",webkitHidden:"webkitvisibilitychange",mozHidden:"mozvisibilitychange",msHidden:"msvisibilitychange"};for(stateKey in keys)if(stateKey in document){eventKey=keys[stateKey];break}return function(c){return c&&document.addEventListener(eventKey,c),!document[stateKey]}}();

!function(Drupal,$){Drupal.behaviors.articleFeedViewMore={attach:function(context,settings){$(window).on("load",function(){var size,count,articles,variation;$(window).width()>768&&$(".article-feed").each(function(i,obj){variation=$(".article-feed").data("var");"var4"==variation?$articleContainer=$(this).find(".desktop-only"):$articleContainer=$(this).find(".content-container"),articles=$articleContainer.find("article"),size=articles.length;var query=Modernizr.mq("(max-width: 768px)");if(count=3,count="var4"===variation?Modernizr.mq("(max-width: 1024px)")?3:4:"var5"===variation?4:3,size>count){if("var4"==variation&&query)return;for(i=count;i<size;i++)articles.eq(i).hide();$articleContainer.append('<div class="load-more-container" data-aos="fade"><a href="javascript:void(0)" aria-role="button" aria-label="show more" class="btn btn-grey load-more js-load-more">Load more</a></div>')}}),$(window).width()>768&&$("body").on("click",".js-load-more",function(e){e.preventDefault(),$(this).parent().parent("div").find("article").show(),$(this).parent("div.load-more-container").remove(),AOS.refresh()})})}}}(Drupal,jQuery,this);

/*
     _ _      _       _
 ___| (_) ___| | __  (_)___
/ __| | |/ __| |/ /  | / __|
\__ \ | | (__|   < _ | \__ \
|___/_|_|\___|_|\_(_)/ |___/
                   |__/

 Version: 1.8.1
  Author: Ken Wheeler
 Website: http://kenwheeler.github.io
    Docs: http://kenwheeler.github.io/slick
    Repo: http://github.com/kenwheeler/slick
  Issues: http://github.com/kenwheeler/slick/issues

 */
/* global window, document, define, jQuery, setInterval, clearInterval */
;(function(factory) {
    'use strict';
    if (typeof define === 'function' && define.amd) {
        define(['jquery'], factory);
    } else if (typeof exports !== 'undefined') {
        module.exports = factory(require('jquery'));
    } else {
        factory(jQuery);
    }

}(function($) {
    'use strict';
    var Slick = window.Slick || {};

    Slick = (function() {

        var instanceUid = 0;

        function Slick(element, settings) {

            var _ = this, dataSettings;

            _.defaults = {
                accessibility: true,
                adaptiveHeight: false,
                appendArrows: $(element),
                appendDots: $(element),
                arrows: true,
                asNavFor: null,
                prevArrow: '<button class="slick-prev" aria-label="Previous" type="button">Previous</button>',
                nextArrow: '<button class="slick-next" aria-label="Next" type="button">Next</button>',
                autoplay: false,
                autoplaySpeed: 3000,
                centerMode: false,
                centerPadding: '50px',
                cssEase: 'ease',
                customPaging: function(slider, i) {
                    return $('<button type="button" />').text(i + 1);
                },
                dots: false,
                dotsClass: 'slick-dots',
                draggable: true,
                easing: 'linear',
                edgeFriction: 0.35,
                fade: false,
                focusOnSelect: false,
                focusOnChange: false,
                infinite: true,
                initialSlide: 0,
                lazyLoad: 'ondemand',
                mobileFirst: false,
                pauseOnHover: true,
                pauseOnFocus: true,
                pauseOnDotsHover: false,
                respondTo: 'window',
                responsive: null,
                rows: 1,
                rtl: false,
                slide: '',
                slidesPerRow: 1,
                slidesToShow: 1,
                slidesToScroll: 1,
                speed: 500,
                swipe: true,
                swipeToSlide: false,
                touchMove: true,
                touchThreshold: 5,
                useCSS: true,
                useTransform: true,
                variableWidth: false,
                vertical: false,
                verticalSwiping: false,
                waitForAnimate: true,
                zIndex: 1000
            };

            _.initials = {
                animating: false,
                dragging: false,
                autoPlayTimer: null,
                currentDirection: 0,
                currentLeft: null,
                currentSlide: 0,
                direction: 1,
                $dots: null,
                listWidth: null,
                listHeight: null,
                loadIndex: 0,
                $nextArrow: null,
                $prevArrow: null,
                scrolling: false,
                slideCount: null,
                slideWidth: null,
                $slideTrack: null,
                $slides: null,
                sliding: false,
                slideOffset: 0,
                swipeLeft: null,
                swiping: false,
                $list: null,
                touchObject: {},
                transformsEnabled: false,
                unslicked: false
            };

            $.extend(_, _.initials);

            _.activeBreakpoint = null;
            _.animType = null;
            _.animProp = null;
            _.breakpoints = [];
            _.breakpointSettings = [];
            _.cssTransitions = false;
            _.focussed = false;
            _.interrupted = false;
            _.hidden = 'hidden';
            _.paused = true;
            _.positionProp = null;
            _.respondTo = null;
            _.rowCount = 1;
            _.shouldClick = true;
            _.$slider = $(element);
            _.$slidesCache = null;
            _.transformType = null;
            _.transitionType = null;
            _.visibilityChange = 'visibilitychange';
            _.windowWidth = 0;
            _.windowTimer = null;

            dataSettings = $(element).data('slick') || {};

            _.options = $.extend({}, _.defaults, settings, dataSettings);

            _.currentSlide = _.options.initialSlide;

            _.originalSettings = _.options;

            if (typeof document.mozHidden !== 'undefined') {
                _.hidden = 'mozHidden';
                _.visibilityChange = 'mozvisibilitychange';
            } else if (typeof document.webkitHidden !== 'undefined') {
                _.hidden = 'webkitHidden';
                _.visibilityChange = 'webkitvisibilitychange';
            }

            _.autoPlay = $.proxy(_.autoPlay, _);
            _.autoPlayClear = $.proxy(_.autoPlayClear, _);
            _.autoPlayIterator = $.proxy(_.autoPlayIterator, _);
            _.changeSlide = $.proxy(_.changeSlide, _);
            _.clickHandler = $.proxy(_.clickHandler, _);
            _.selectHandler = $.proxy(_.selectHandler, _);
            _.setPosition = $.proxy(_.setPosition, _);
            _.swipeHandler = $.proxy(_.swipeHandler, _);
            _.dragHandler = $.proxy(_.dragHandler, _);
            _.keyHandler = $.proxy(_.keyHandler, _);

            _.instanceUid = instanceUid++;

            // A simple way to check for HTML strings
            // Strict HTML recognition (must start with <)
            // Extracted from jQuery v1.11 source
            _.htmlExpr = /^(?:\s*(<[\w\W]+>)[^>]*)$/;


            _.registerBreakpoints();
            _.init(true);

        }

        return Slick;

    }());

    Slick.prototype.activateADA = function() {
        var _ = this;

        _.$slideTrack.find('.slick-active').attr({
            'aria-hidden': 'false'
        }).find('a, input, button, select').attr({
            'tabindex': '0'
        });

    };

    Slick.prototype.addSlide = Slick.prototype.slickAdd = function(markup, index, addBefore) {

        var _ = this;

        if (typeof(index) === 'boolean') {
            addBefore = index;
            index = null;
        } else if (index < 0 || (index >= _.slideCount)) {
            return false;
        }

        _.unload();

        if (typeof(index) === 'number') {
            if (index === 0 && _.$slides.length === 0) {
                $(markup).appendTo(_.$slideTrack);
            } else if (addBefore) {
                $(markup).insertBefore(_.$slides.eq(index));
            } else {
                $(markup).insertAfter(_.$slides.eq(index));
            }
        } else {
            if (addBefore === true) {
                $(markup).prependTo(_.$slideTrack);
            } else {
                $(markup).appendTo(_.$slideTrack);
            }
        }

        _.$slides = _.$slideTrack.children(this.options.slide);

        _.$slideTrack.children(this.options.slide).detach();

        _.$slideTrack.append(_.$slides);

        _.$slides.each(function(index, element) {
            $(element).attr('data-slick-index', index);
        });

        _.$slidesCache = _.$slides;

        _.reinit();

    };

    Slick.prototype.animateHeight = function() {
        var _ = this;
        if (_.options.slidesToShow === 1 && _.options.adaptiveHeight === true && _.options.vertical === false) {
            var targetHeight = _.$slides.eq(_.currentSlide).outerHeight(true);
            _.$list.animate({
                height: targetHeight
            }, _.options.speed);
        }
    };

    Slick.prototype.animateSlide = function(targetLeft, callback) {

        var animProps = {},
            _ = this;

        _.animateHeight();

        if (_.options.rtl === true && _.options.vertical === false) {
            targetLeft = -targetLeft;
        }
        if (_.transformsEnabled === false) {
            if (_.options.vertical === false) {
                _.$slideTrack.animate({
                    left: targetLeft
                }, _.options.speed, _.options.easing, callback);
            } else {
                _.$slideTrack.animate({
                    top: targetLeft
                }, _.options.speed, _.options.easing, callback);
            }

        } else {

            if (_.cssTransitions === false) {
                if (_.options.rtl === true) {
                    _.currentLeft = -(_.currentLeft);
                }
                $({
                    animStart: _.currentLeft
                }).animate({
                    animStart: targetLeft
                }, {
                    duration: _.options.speed,
                    easing: _.options.easing,
                    step: function(now) {
                        now = Math.ceil(now);
                        if (_.options.vertical === false) {
                            animProps[_.animType] = 'translate(' +
                                now + 'px, 0px)';
                            _.$slideTrack.css(animProps);
                        } else {
                            animProps[_.animType] = 'translate(0px,' +
                                now + 'px)';
                            _.$slideTrack.css(animProps);
                        }
                    },
                    complete: function() {
                        if (callback) {
                            callback.call();
                        }
                    }
                });

            } else {

                _.applyTransition();
                targetLeft = Math.ceil(targetLeft);

                if (_.options.vertical === false) {
                    animProps[_.animType] = 'translate3d(' + targetLeft + 'px, 0px, 0px)';
                } else {
                    animProps[_.animType] = 'translate3d(0px,' + targetLeft + 'px, 0px)';
                }
                _.$slideTrack.css(animProps);

                if (callback) {
                    setTimeout(function() {

                        _.disableTransition();

                        callback.call();
                    }, _.options.speed);
                }

            }

        }

    };

    Slick.prototype.getNavTarget = function() {

        var _ = this,
            asNavFor = _.options.asNavFor;

        if ( asNavFor && asNavFor !== null ) {
            asNavFor = $(asNavFor).not(_.$slider);
        }

        return asNavFor;

    };

    Slick.prototype.asNavFor = function(index) {

        var _ = this,
            asNavFor = _.getNavTarget();

        if ( asNavFor !== null && typeof asNavFor === 'object' ) {
            asNavFor.each(function() {
                var target = $(this).slick('getSlick');
                if(!target.unslicked) {
                    target.slideHandler(index, true);
                }
            });
        }

    };

    Slick.prototype.applyTransition = function(slide) {

        var _ = this,
            transition = {};

        if (_.options.fade === false) {
            transition[_.transitionType] = _.transformType + ' ' + _.options.speed + 'ms ' + _.options.cssEase;
        } else {
            transition[_.transitionType] = 'opacity ' + _.options.speed + 'ms ' + _.options.cssEase;
        }

        if (_.options.fade === false) {
            _.$slideTrack.css(transition);
        } else {
            _.$slides.eq(slide).css(transition);
        }

    };

    Slick.prototype.autoPlay = function() {

        var _ = this;

        _.autoPlayClear();

        if ( _.slideCount > _.options.slidesToShow ) {
            _.autoPlayTimer = setInterval( _.autoPlayIterator, _.options.autoplaySpeed );
        }

    };

    Slick.prototype.autoPlayClear = function() {

        var _ = this;

        if (_.autoPlayTimer) {
            clearInterval(_.autoPlayTimer);
        }

    };

    Slick.prototype.autoPlayIterator = function() {

        var _ = this,
            slideTo = _.currentSlide + _.options.slidesToScroll;

        if ( !_.paused && !_.interrupted && !_.focussed ) {

            if ( _.options.infinite === false ) {

                if ( _.direction === 1 && ( _.currentSlide + 1 ) === ( _.slideCount - 1 )) {
                    _.direction = 0;
                }

                else if ( _.direction === 0 ) {

                    slideTo = _.currentSlide - _.options.slidesToScroll;

                    if ( _.currentSlide - 1 === 0 ) {
                        _.direction = 1;
                    }

                }

            }

            _.slideHandler( slideTo );

        }

    };

    Slick.prototype.buildArrows = function() {

        var _ = this;

        if (_.options.arrows === true ) {

            _.$prevArrow = $(_.options.prevArrow).addClass('slick-arrow');
            _.$nextArrow = $(_.options.nextArrow).addClass('slick-arrow');

            if( _.slideCount > _.options.slidesToShow ) {

                _.$prevArrow.removeClass('slick-hidden').removeAttr('aria-hidden tabindex');
                _.$nextArrow.removeClass('slick-hidden').removeAttr('aria-hidden tabindex');

                if (_.htmlExpr.test(_.options.prevArrow)) {
                    _.$prevArrow.prependTo(_.options.appendArrows);
                }

                if (_.htmlExpr.test(_.options.nextArrow)) {
                    _.$nextArrow.appendTo(_.options.appendArrows);
                }

                if (_.options.infinite !== true) {
                    _.$prevArrow
                        .addClass('slick-disabled')
                        .attr('aria-disabled', 'true');
                }

            } else {

                _.$prevArrow.add( _.$nextArrow )

                    .addClass('slick-hidden')
                    .attr({
                        'aria-disabled': 'true',
                        'tabindex': '-1'
                    });

            }

        }

    };

    Slick.prototype.buildDots = function() {

        var _ = this,
            i, dot;

        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {

            _.$slider.addClass('slick-dotted');

            dot = $('<ul />').addClass(_.options.dotsClass);

            for (i = 0; i <= _.getDotCount(); i += 1) {
                dot.append($('<li />').append(_.options.customPaging.call(this, _, i)));
            }

            _.$dots = dot.appendTo(_.options.appendDots);

            _.$dots.find('li').first().addClass('slick-active');

        }

    };

    Slick.prototype.buildOut = function() {

        var _ = this;

        _.$slides =
            _.$slider
                .children( _.options.slide + ':not(.slick-cloned)')
                .addClass('slick-slide');

        _.slideCount = _.$slides.length;

        _.$slides.each(function(index, element) {
            $(element)
                .attr('data-slick-index', index)
                .data('originalStyling', $(element).attr('style') || '');
        });

        _.$slider.addClass('slick-slider');

        _.$slideTrack = (_.slideCount === 0) ?
            $('<div class="slick-track"/>').appendTo(_.$slider) :
            _.$slides.wrapAll('<div class="slick-track"/>').parent();

        _.$list = _.$slideTrack.wrap(
            '<div class="slick-list"/>').parent();
        _.$slideTrack.css('opacity', 0);

        if (_.options.centerMode === true || _.options.swipeToSlide === true) {
            _.options.slidesToScroll = 1;
        }

        $('img[data-lazy]', _.$slider).not('[src]').addClass('slick-loading');

        _.setupInfinite();

        _.buildArrows();

        _.buildDots();

        _.updateDots();


        _.setSlideClasses(typeof _.currentSlide === 'number' ? _.currentSlide : 0);

        if (_.options.draggable === true) {
            _.$list.addClass('draggable');
        }

    };

    Slick.prototype.buildRows = function() {

        var _ = this, a, b, c, newSlides, numOfSlides, originalSlides,slidesPerSection;

        newSlides = document.createDocumentFragment();
        originalSlides = _.$slider.children();

        if(_.options.rows > 0) {

            slidesPerSection = _.options.slidesPerRow * _.options.rows;
            numOfSlides = Math.ceil(
                originalSlides.length / slidesPerSection
            );

            for(a = 0; a < numOfSlides; a++){
                var slide = document.createElement('div');
                for(b = 0; b < _.options.rows; b++) {
                    var row = document.createElement('div');
                    for(c = 0; c < _.options.slidesPerRow; c++) {
                        var target = (a * slidesPerSection + ((b * _.options.slidesPerRow) + c));
                        if (originalSlides.get(target)) {
                            row.appendChild(originalSlides.get(target));
                        }
                    }
                    slide.appendChild(row);
                }
                newSlides.appendChild(slide);
            }

            _.$slider.empty().append(newSlides);
            _.$slider.children().children().children()
                .css({
                    'width':(100 / _.options.slidesPerRow) + '%',
                    'display': 'inline-block'
                });

        }

    };

    Slick.prototype.checkResponsive = function(initial, forceUpdate) {

        var _ = this,
            breakpoint, targetBreakpoint, respondToWidth, triggerBreakpoint = false;
        var sliderWidth = _.$slider.width();
        var windowWidth = window.innerWidth || $(window).width();

        if (_.respondTo === 'window') {
            respondToWidth = windowWidth;
        } else if (_.respondTo === 'slider') {
            respondToWidth = sliderWidth;
        } else if (_.respondTo === 'min') {
            respondToWidth = Math.min(windowWidth, sliderWidth);
        }

        if ( _.options.responsive &&
            _.options.responsive.length &&
            _.options.responsive !== null) {

            targetBreakpoint = null;

            for (breakpoint in _.breakpoints) {
                if (_.breakpoints.hasOwnProperty(breakpoint)) {
                    if (_.originalSettings.mobileFirst === false) {
                        if (respondToWidth < _.breakpoints[breakpoint]) {
                            targetBreakpoint = _.breakpoints[breakpoint];
                        }
                    } else {
                        if (respondToWidth > _.breakpoints[breakpoint]) {
                            targetBreakpoint = _.breakpoints[breakpoint];
                        }
                    }
                }
            }

            if (targetBreakpoint !== null) {
                if (_.activeBreakpoint !== null) {
                    if (targetBreakpoint !== _.activeBreakpoint || forceUpdate) {
                        _.activeBreakpoint =
                            targetBreakpoint;
                        if (_.breakpointSettings[targetBreakpoint] === 'unslick') {
                            _.unslick(targetBreakpoint);
                        } else {
                            _.options = $.extend({}, _.originalSettings,
                                _.breakpointSettings[
                                    targetBreakpoint]);
                            if (initial === true) {
                                _.currentSlide = _.options.initialSlide;
                            }
                            _.refresh(initial);
                        }
                        triggerBreakpoint = targetBreakpoint;
                    }
                } else {
                    _.activeBreakpoint = targetBreakpoint;
                    if (_.breakpointSettings[targetBreakpoint] === 'unslick') {
                        _.unslick(targetBreakpoint);
                    } else {
                        _.options = $.extend({}, _.originalSettings,
                            _.breakpointSettings[
                                targetBreakpoint]);
                        if (initial === true) {
                            _.currentSlide = _.options.initialSlide;
                        }
                        _.refresh(initial);
                    }
                    triggerBreakpoint = targetBreakpoint;
                }
            } else {
                if (_.activeBreakpoint !== null) {
                    _.activeBreakpoint = null;
                    _.options = _.originalSettings;
                    if (initial === true) {
                        _.currentSlide = _.options.initialSlide;
                    }
                    _.refresh(initial);
                    triggerBreakpoint = targetBreakpoint;
                }
            }

            // only trigger breakpoints during an actual break. not on initialize.
            if( !initial && triggerBreakpoint !== false ) {
                _.$slider.trigger('breakpoint', [_, triggerBreakpoint]);
            }
        }

    };

    Slick.prototype.changeSlide = function(event, dontAnimate) {

        var _ = this,
            $target = $(event.currentTarget),
            indexOffset, slideOffset, unevenOffset;

        // If target is a link, prevent default action.
        if($target.is('a')) {
            event.preventDefault();
        }

        // If target is not the <li> element (ie: a child), find the <li>.
        if(!$target.is('li')) {
            $target = $target.closest('li');
        }

        unevenOffset = (_.slideCount % _.options.slidesToScroll !== 0);
        indexOffset = unevenOffset ? 0 : (_.slideCount - _.currentSlide) % _.options.slidesToScroll;

        switch (event.data.message) {

            case 'previous':
                slideOffset = indexOffset === 0 ? _.options.slidesToScroll : _.options.slidesToShow - indexOffset;
                if (_.slideCount > _.options.slidesToShow) {
                    _.slideHandler(_.currentSlide - slideOffset, false, dontAnimate);
                }
                break;

            case 'next':
                slideOffset = indexOffset === 0 ? _.options.slidesToScroll : indexOffset;
                if (_.slideCount > _.options.slidesToShow) {
                    _.slideHandler(_.currentSlide + slideOffset, false, dontAnimate);
                }
                break;

            case 'index':
                var index = event.data.index === 0 ? 0 :
                    event.data.index || $target.index() * _.options.slidesToScroll;

                _.slideHandler(_.checkNavigable(index), false, dontAnimate);
                $target.children().trigger('focus');
                break;

            default:
                return;
        }

    };

    Slick.prototype.checkNavigable = function(index) {

        var _ = this,
            navigables, prevNavigable;

        navigables = _.getNavigableIndexes();
        prevNavigable = 0;
        if (index > navigables[navigables.length - 1]) {
            index = navigables[navigables.length - 1];
        } else {
            for (var n in navigables) {
                if (index < navigables[n]) {
                    index = prevNavigable;
                    break;
                }
                prevNavigable = navigables[n];
            }
        }

        return index;
    };

    Slick.prototype.cleanUpEvents = function() {

        var _ = this;

        if (_.options.dots && _.$dots !== null) {

            $('li', _.$dots)
                .off('click.slick', _.changeSlide)
                .off('mouseenter.slick', $.proxy(_.interrupt, _, true))
                .off('mouseleave.slick', $.proxy(_.interrupt, _, false));

            if (_.options.accessibility === true) {
                _.$dots.off('keydown.slick', _.keyHandler);
            }
        }

        _.$slider.off('focus.slick blur.slick');

        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {
            _.$prevArrow && _.$prevArrow.off('click.slick', _.changeSlide);
            _.$nextArrow && _.$nextArrow.off('click.slick', _.changeSlide);

            if (_.options.accessibility === true) {
                _.$prevArrow && _.$prevArrow.off('keydown.slick', _.keyHandler);
                _.$nextArrow && _.$nextArrow.off('keydown.slick', _.keyHandler);
            }
        }

        _.$list.off('touchstart.slick mousedown.slick', _.swipeHandler);
        _.$list.off('touchmove.slick mousemove.slick', _.swipeHandler);
        _.$list.off('touchend.slick mouseup.slick', _.swipeHandler);
        _.$list.off('touchcancel.slick mouseleave.slick', _.swipeHandler);

        _.$list.off('click.slick', _.clickHandler);

        $(document).off(_.visibilityChange, _.visibility);

        _.cleanUpSlideEvents();

        if (_.options.accessibility === true) {
            _.$list.off('keydown.slick', _.keyHandler);
        }

        if (_.options.focusOnSelect === true) {
            $(_.$slideTrack).children().off('click.slick', _.selectHandler);
        }

        $(window).off('orientationchange.slick.slick-' + _.instanceUid, _.orientationChange);

        $(window).off('resize.slick.slick-' + _.instanceUid, _.resize);

        $('[draggable!=true]', _.$slideTrack).off('dragstart', _.preventDefault);

        $(window).off('load.slick.slick-' + _.instanceUid, _.setPosition);

    };

    Slick.prototype.cleanUpSlideEvents = function() {

        var _ = this;

        _.$list.off('mouseenter.slick', $.proxy(_.interrupt, _, true));
        _.$list.off('mouseleave.slick', $.proxy(_.interrupt, _, false));

    };

    Slick.prototype.cleanUpRows = function() {

        var _ = this, originalSlides;

        if(_.options.rows > 0) {
            originalSlides = _.$slides.children().children();
            originalSlides.removeAttr('style');
            _.$slider.empty().append(originalSlides);
        }

    };

    Slick.prototype.clickHandler = function(event) {

        var _ = this;

        if (_.shouldClick === false) {
            event.stopImmediatePropagation();
            event.stopPropagation();
            event.preventDefault();
        }

    };

    Slick.prototype.destroy = function(refresh) {

        var _ = this;

        _.autoPlayClear();

        _.touchObject = {};

        _.cleanUpEvents();

        $('.slick-cloned', _.$slider).detach();

        if (_.$dots) {
            _.$dots.remove();
        }

        if ( _.$prevArrow && _.$prevArrow.length ) {

            _.$prevArrow
                .removeClass('slick-disabled slick-arrow slick-hidden')
                .removeAttr('aria-hidden aria-disabled tabindex')
                .css('display','');

            if ( _.htmlExpr.test( _.options.prevArrow )) {
                _.$prevArrow.remove();
            }
        }

        if ( _.$nextArrow && _.$nextArrow.length ) {

            _.$nextArrow
                .removeClass('slick-disabled slick-arrow slick-hidden')
                .removeAttr('aria-hidden aria-disabled tabindex')
                .css('display','');

            if ( _.htmlExpr.test( _.options.nextArrow )) {
                _.$nextArrow.remove();
            }
        }


        if (_.$slides) {

            _.$slides
                .removeClass('slick-slide slick-active slick-center slick-visible slick-current')
                .removeAttr('aria-hidden')
                .removeAttr('data-slick-index')
                .each(function(){
                    $(this).attr('style', $(this).data('originalStyling'));
                });

            _.$slideTrack.children(this.options.slide).detach();

            _.$slideTrack.detach();

            _.$list.detach();

            _.$slider.append(_.$slides);
        }

        _.cleanUpRows();

        _.$slider.removeClass('slick-slider');
        _.$slider.removeClass('slick-initialized');
        _.$slider.removeClass('slick-dotted');

        _.unslicked = true;

        if(!refresh) {
            _.$slider.trigger('destroy', [_]);
        }

    };

    Slick.prototype.disableTransition = function(slide) {

        var _ = this,
            transition = {};

        transition[_.transitionType] = '';

        if (_.options.fade === false) {
            _.$slideTrack.css(transition);
        } else {
            _.$slides.eq(slide).css(transition);
        }

    };

    Slick.prototype.fadeSlide = function(slideIndex, callback) {

        var _ = this;

        if (_.cssTransitions === false) {

            _.$slides.eq(slideIndex).css({
                zIndex: _.options.zIndex
            });

            _.$slides.eq(slideIndex).animate({
                opacity: 1
            }, _.options.speed, _.options.easing, callback);

        } else {

            _.applyTransition(slideIndex);

            _.$slides.eq(slideIndex).css({
                opacity: 1,
                zIndex: _.options.zIndex
            });

            if (callback) {
                setTimeout(function() {

                    _.disableTransition(slideIndex);

                    callback.call();
                }, _.options.speed);
            }

        }

    };

    Slick.prototype.fadeSlideOut = function(slideIndex) {

        var _ = this;

        if (_.cssTransitions === false) {

            _.$slides.eq(slideIndex).animate({
                opacity: 0,
                zIndex: _.options.zIndex - 2
            }, _.options.speed, _.options.easing);

        } else {

            _.applyTransition(slideIndex);

            _.$slides.eq(slideIndex).css({
                opacity: 0,
                zIndex: _.options.zIndex - 2
            });

        }

    };

    Slick.prototype.filterSlides = Slick.prototype.slickFilter = function(filter) {

        var _ = this;

        if (filter !== null) {

            _.$slidesCache = _.$slides;

            _.unload();

            _.$slideTrack.children(this.options.slide).detach();

            _.$slidesCache.filter(filter).appendTo(_.$slideTrack);

            _.reinit();

        }

    };

    Slick.prototype.focusHandler = function() {

        var _ = this;

        _.$slider
            .off('focus.slick blur.slick')
            .on('focus.slick blur.slick', '*', function(event) {

            event.stopImmediatePropagation();
            var $sf = $(this);

            setTimeout(function() {

                if( _.options.pauseOnFocus ) {
                    _.focussed = $sf.is(':focus');
                    _.autoPlay();
                }

            }, 0);

        });
    };

    Slick.prototype.getCurrent = Slick.prototype.slickCurrentSlide = function() {

        var _ = this;
        return _.currentSlide;

    };

    Slick.prototype.getDotCount = function() {

        var _ = this;

        var breakPoint = 0;
        var counter = 0;
        var pagerQty = 0;

        if (_.options.infinite === true) {
            if (_.slideCount <= _.options.slidesToShow) {
                 ++pagerQty;
            } else {
                while (breakPoint < _.slideCount) {
                    ++pagerQty;
                    breakPoint = counter + _.options.slidesToScroll;
                    counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;
                }
            }
        } else if (_.options.centerMode === true) {
            pagerQty = _.slideCount;
        } else if(!_.options.asNavFor) {
            pagerQty = 1 + Math.ceil((_.slideCount - _.options.slidesToShow) / _.options.slidesToScroll);
        }else {
            while (breakPoint < _.slideCount) {
                ++pagerQty;
                breakPoint = counter + _.options.slidesToScroll;
                counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;
            }
        }

        return pagerQty - 1;

    };

    Slick.prototype.getLeft = function(slideIndex) {

        var _ = this,
            targetLeft,
            verticalHeight,
            verticalOffset = 0,
            targetSlide,
            coef;

        _.slideOffset = 0;
        verticalHeight = _.$slides.first().outerHeight(true);

        if (_.options.infinite === true) {
            if (_.slideCount > _.options.slidesToShow) {
                _.slideOffset = (_.slideWidth * _.options.slidesToShow) * -1;
                coef = -1

                if (_.options.vertical === true && _.options.centerMode === true) {
                    if (_.options.slidesToShow === 2) {
                        coef = -1.5;
                    } else if (_.options.slidesToShow === 1) {
                        coef = -2
                    }
                }
                verticalOffset = (verticalHeight * _.options.slidesToShow) * coef;
            }
            if (_.slideCount % _.options.slidesToScroll !== 0) {
                if (slideIndex + _.options.slidesToScroll > _.slideCount && _.slideCount > _.options.slidesToShow) {
                    if (slideIndex > _.slideCount) {
                        _.slideOffset = ((_.options.slidesToShow - (slideIndex - _.slideCount)) * _.slideWidth) * -1;
                        verticalOffset = ((_.options.slidesToShow - (slideIndex - _.slideCount)) * verticalHeight) * -1;
                    } else {
                        _.slideOffset = ((_.slideCount % _.options.slidesToScroll) * _.slideWidth) * -1;
                        verticalOffset = ((_.slideCount % _.options.slidesToScroll) * verticalHeight) * -1;
                    }
                }
            }
        } else {
            if (slideIndex + _.options.slidesToShow > _.slideCount) {
                _.slideOffset = ((slideIndex + _.options.slidesToShow) - _.slideCount) * _.slideWidth;
                verticalOffset = ((slideIndex + _.options.slidesToShow) - _.slideCount) * verticalHeight;
            }
        }

        if (_.slideCount <= _.options.slidesToShow) {
            _.slideOffset = 0;
            verticalOffset = 0;
        }

        if (_.options.centerMode === true && _.slideCount <= _.options.slidesToShow) {
            _.slideOffset = ((_.slideWidth * Math.floor(_.options.slidesToShow)) / 2) - ((_.slideWidth * _.slideCount) / 2);
        } else if (_.options.centerMode === true && _.options.infinite === true) {
            _.slideOffset += _.slideWidth * Math.floor(_.options.slidesToShow / 2) - _.slideWidth;
        } else if (_.options.centerMode === true) {
            _.slideOffset = 0;
            _.slideOffset += _.slideWidth * Math.floor(_.options.slidesToShow / 2);
        }

        if (_.options.vertical === false) {
            targetLeft = ((slideIndex * _.slideWidth) * -1) + _.slideOffset;
        } else {
            targetLeft = ((slideIndex * verticalHeight) * -1) + verticalOffset;
        }

        if (_.options.variableWidth === true) {

            if (_.slideCount <= _.options.slidesToShow || _.options.infinite === false) {
                targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex);
            } else {
                targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex + _.options.slidesToShow);
            }

            if (_.options.rtl === true) {
                if (targetSlide[0]) {
                    targetLeft = (_.$slideTrack.width() - targetSlide[0].offsetLeft - targetSlide.width()) * -1;
                } else {
                    targetLeft =  0;
                }
            } else {
                targetLeft = targetSlide[0] ? targetSlide[0].offsetLeft * -1 : 0;
            }

            if (_.options.centerMode === true) {
                if (_.slideCount <= _.options.slidesToShow || _.options.infinite === false) {
                    targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex);
                } else {
                    targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex + _.options.slidesToShow + 1);
                }

                if (_.options.rtl === true) {
                    if (targetSlide[0]) {
                        targetLeft = (_.$slideTrack.width() - targetSlide[0].offsetLeft - targetSlide.width()) * -1;
                    } else {
                        targetLeft =  0;
                    }
                } else {
                    targetLeft = targetSlide[0] ? targetSlide[0].offsetLeft * -1 : 0;
                }

                targetLeft += (_.$list.width() - targetSlide.outerWidth()) / 2;
            }
        }

        return targetLeft;

    };

    Slick.prototype.getOption = Slick.prototype.slickGetOption = function(option) {

        var _ = this;

        return _.options[option];

    };

    Slick.prototype.getNavigableIndexes = function() {

        var _ = this,
            breakPoint = 0,
            counter = 0,
            indexes = [],
            max;

        if (_.options.infinite === false) {
            max = _.slideCount;
        } else {
            breakPoint = _.options.slidesToScroll * -1;
            counter = _.options.slidesToScroll * -1;
            max = _.slideCount * 2;
        }

        while (breakPoint < max) {
            indexes.push(breakPoint);
            breakPoint = counter + _.options.slidesToScroll;
            counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;
        }

        return indexes;

    };

    Slick.prototype.getSlick = function() {

        return this;

    };

    Slick.prototype.getSlideCount = function() {

        var _ = this,
            slidesTraversed, swipedSlide, centerOffset;

        centerOffset = _.options.centerMode === true ? _.slideWidth * Math.floor(_.options.slidesToShow / 2) : 0;

        if (_.options.swipeToSlide === true) {
            _.$slideTrack.find('.slick-slide').each(function(index, slide) {
                if (slide.offsetLeft - centerOffset + ($(slide).outerWidth() / 2) > (_.swipeLeft * -1)) {
                    swipedSlide = slide;
                    return false;
                }
            });

            slidesTraversed = Math.abs($(swipedSlide).attr('data-slick-index') - _.currentSlide) || 1;

            return slidesTraversed;

        } else {
            return _.options.slidesToScroll;
        }

    };

    Slick.prototype.goTo = Slick.prototype.slickGoTo = function(slide, dontAnimate) {

        var _ = this;

        _.changeSlide({
            data: {
                message: 'index',
                index: parseInt(slide)
            }
        }, dontAnimate);

    };

    Slick.prototype.init = function(creation) {

        var _ = this;

        if (!$(_.$slider).hasClass('slick-initialized')) {

            $(_.$slider).addClass('slick-initialized');

            _.buildRows();
            _.buildOut();
            _.setProps();
            _.startLoad();
            _.loadSlider();
            _.initializeEvents();
            _.updateArrows();
            _.updateDots();
            _.checkResponsive(true);
            _.focusHandler();

        }

        if (creation) {
            _.$slider.trigger('init', [_]);
        }

        if (_.options.accessibility === true) {
            _.initADA();
        }

        if ( _.options.autoplay ) {

            _.paused = false;
            _.autoPlay();

        }

    };

    Slick.prototype.initADA = function() {
        var _ = this,
                numDotGroups = Math.ceil(_.slideCount / _.options.slidesToShow),
                tabControlIndexes = _.getNavigableIndexes().filter(function(val) {
                    return (val >= 0) && (val < _.slideCount);
                });

        _.$slides.add(_.$slideTrack.find('.slick-cloned')).attr({
            'aria-hidden': 'true',
            'tabindex': '-1'
        }).find('a, input, button, select').attr({
            'tabindex': '-1'
        });

        if (_.$dots !== null) {
            _.$slides.not(_.$slideTrack.find('.slick-cloned')).each(function(i) {
                var slideControlIndex = tabControlIndexes.indexOf(i);

                $(this).attr({
                    'role': 'tabpanel',
                    'id': 'slick-slide' + _.instanceUid + i,
                    'tabindex': -1
                });

                if (slideControlIndex !== -1) {
                   var ariaButtonControl = 'slick-slide-control' + _.instanceUid + slideControlIndex
                   if ($('#' + ariaButtonControl).length) {
                     $(this).attr({
                         'aria-describedby': ariaButtonControl
                     });
                   }
                }
            });

            _.$dots.attr('role', 'tablist').find('li').each(function(i) {
                var mappedSlideIndex = tabControlIndexes[i];

                $(this).attr({
                    'role': 'presentation'
                });

                $(this).find('button').first().attr({
                    'role': 'tab',
                    'id': 'slick-slide-control' + _.instanceUid + i,
                    'aria-controls': 'slick-slide' + _.instanceUid + mappedSlideIndex,
                    'aria-label': (i + 1) + ' of ' + numDotGroups,
                    'aria-selected': null,
                    'tabindex': '-1'
                });

            }).eq(_.currentSlide).find('button').attr({
                'aria-selected': 'true',
                'tabindex': '0'
            }).end();
        }

        for (var i=_.currentSlide, max=i+_.options.slidesToShow; i < max; i++) {
          if (_.options.focusOnChange) {
            _.$slides.eq(i).attr({'tabindex': '0'});
          } else {
            _.$slides.eq(i).removeAttr('tabindex');
          }
        }

        _.activateADA();

    };

    Slick.prototype.initArrowEvents = function() {

        var _ = this;

        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {
            _.$prevArrow
               .off('click.slick')
               .on('click.slick', {
                    message: 'previous'
               }, _.changeSlide);
            _.$nextArrow
               .off('click.slick')
               .on('click.slick', {
                    message: 'next'
               }, _.changeSlide);

            if (_.options.accessibility === true) {
                _.$prevArrow.on('keydown.slick', _.keyHandler);
                _.$nextArrow.on('keydown.slick', _.keyHandler);
            }
        }

    };

    Slick.prototype.initDotEvents = function() {

        var _ = this;

        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {
            $('li', _.$dots).on('click.slick', {
                message: 'index'
            }, _.changeSlide);

            if (_.options.accessibility === true) {
                _.$dots.on('keydown.slick', _.keyHandler);
            }
        }

        if (_.options.dots === true && _.options.pauseOnDotsHover === true && _.slideCount > _.options.slidesToShow) {

            $('li', _.$dots)
                .on('mouseenter.slick', $.proxy(_.interrupt, _, true))
                .on('mouseleave.slick', $.proxy(_.interrupt, _, false));

        }

    };

    Slick.prototype.initSlideEvents = function() {

        var _ = this;

        if ( _.options.pauseOnHover ) {

            _.$list.on('mouseenter.slick', $.proxy(_.interrupt, _, true));
            _.$list.on('mouseleave.slick', $.proxy(_.interrupt, _, false));

        }

    };

    Slick.prototype.initializeEvents = function() {

        var _ = this;

        _.initArrowEvents();

        _.initDotEvents();
        _.initSlideEvents();

        _.$list.on('touchstart.slick mousedown.slick', {
            action: 'start'
        }, _.swipeHandler);
        _.$list.on('touchmove.slick mousemove.slick', {
            action: 'move'
        }, _.swipeHandler);
        _.$list.on('touchend.slick mouseup.slick', {
            action: 'end'
        }, _.swipeHandler);
        _.$list.on('touchcancel.slick mouseleave.slick', {
            action: 'end'
        }, _.swipeHandler);

        _.$list.on('click.slick', _.clickHandler);

        $(document).on(_.visibilityChange, $.proxy(_.visibility, _));

        if (_.options.accessibility === true) {
            _.$list.on('keydown.slick', _.keyHandler);
        }

        if (_.options.focusOnSelect === true) {
            $(_.$slideTrack).children().on('click.slick', _.selectHandler);
        }

        $(window).on('orientationchange.slick.slick-' + _.instanceUid, $.proxy(_.orientationChange, _));

        $(window).on('resize.slick.slick-' + _.instanceUid, $.proxy(_.resize, _));

        $('[draggable!=true]', _.$slideTrack).on('dragstart', _.preventDefault);

        $(window).on('load.slick.slick-' + _.instanceUid, _.setPosition);
        $(_.setPosition);

    };

    Slick.prototype.initUI = function() {

        var _ = this;

        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {

            _.$prevArrow.show();
            _.$nextArrow.show();

        }

        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {

            _.$dots.show();

        }

    };

    Slick.prototype.keyHandler = function(event) {

        var _ = this;
         //Dont slide if the cursor is inside the form fields and arrow keys are pressed
        if(!event.target.tagName.match('TEXTAREA|INPUT|SELECT')) {
            if (event.keyCode === 37 && _.options.accessibility === true) {
                _.changeSlide({
                    data: {
                        message: _.options.rtl === true ? 'next' :  'previous'
                    }
                });
            } else if (event.keyCode === 39 && _.options.accessibility === true) {
                _.changeSlide({
                    data: {
                        message: _.options.rtl === true ? 'previous' : 'next'
                    }
                });
            }
        }

    };

    Slick.prototype.lazyLoad = function() {

        var _ = this,
            loadRange, cloneRange, rangeStart, rangeEnd;

        function loadImages(imagesScope) {

            $('img[data-lazy]', imagesScope).each(function() {

                var image = $(this),
                    imageSource = $(this).attr('data-lazy'),
                    imageSrcSet = $(this).attr('data-srcset'),
                    imageSizes  = $(this).attr('data-sizes') || _.$slider.attr('data-sizes'),
                    imageToLoad = document.createElement('img');

                imageToLoad.onload = function() {

                    image
                        .animate({ opacity: 0 }, 100, function() {

                            if (imageSrcSet) {
                                image
                                    .attr('srcset', imageSrcSet );

                                if (imageSizes) {
                                    image
                                        .attr('sizes', imageSizes );
                                }
                            }

                            image
                                .attr('src', imageSource)
                                .animate({ opacity: 1 }, 200, function() {
                                    image
                                        .removeAttr('data-lazy data-srcset data-sizes')
                                        .removeClass('slick-loading');
                                });
                            _.$slider.trigger('lazyLoaded', [_, image, imageSource]);
                        });

                };

                imageToLoad.onerror = function() {

                    image
                        .removeAttr( 'data-lazy' )
                        .removeClass( 'slick-loading' )
                        .addClass( 'slick-lazyload-error' );

                    _.$slider.trigger('lazyLoadError', [ _, image, imageSource ]);

                };

                imageToLoad.src = imageSource;

            });

        }

        if (_.options.centerMode === true) {
            if (_.options.infinite === true) {
                rangeStart = _.currentSlide + (_.options.slidesToShow / 2 + 1);
                rangeEnd = rangeStart + _.options.slidesToShow + 2;
            } else {
                rangeStart = Math.max(0, _.currentSlide - (_.options.slidesToShow / 2 + 1));
                rangeEnd = 2 + (_.options.slidesToShow / 2 + 1) + _.currentSlide;
            }
        } else {
            rangeStart = _.options.infinite ? _.options.slidesToShow + _.currentSlide : _.currentSlide;
            rangeEnd = Math.ceil(rangeStart + _.options.slidesToShow);
            if (_.options.fade === true) {
                if (rangeStart > 0) rangeStart--;
                if (rangeEnd <= _.slideCount) rangeEnd++;
            }
        }

        loadRange = _.$slider.find('.slick-slide').slice(rangeStart, rangeEnd);

        if (_.options.lazyLoad === 'anticipated') {
            var prevSlide = rangeStart - 1,
                nextSlide = rangeEnd,
                $slides = _.$slider.find('.slick-slide');

            for (var i = 0; i < _.options.slidesToScroll; i++) {
                if (prevSlide < 0) prevSlide = _.slideCount - 1;
                loadRange = loadRange.add($slides.eq(prevSlide));
                loadRange = loadRange.add($slides.eq(nextSlide));
                prevSlide--;
                nextSlide++;
            }
        }

        loadImages(loadRange);

        if (_.slideCount <= _.options.slidesToShow) {
            cloneRange = _.$slider.find('.slick-slide');
            loadImages(cloneRange);
        } else
        if (_.currentSlide >= _.slideCount - _.options.slidesToShow) {
            cloneRange = _.$slider.find('.slick-cloned').slice(0, _.options.slidesToShow);
            loadImages(cloneRange);
        } else if (_.currentSlide === 0) {
            cloneRange = _.$slider.find('.slick-cloned').slice(_.options.slidesToShow * -1);
            loadImages(cloneRange);
        }

    };

    Slick.prototype.loadSlider = function() {

        var _ = this;

        _.setPosition();

        _.$slideTrack.css({
            opacity: 1
        });

        _.$slider.removeClass('slick-loading');

        _.initUI();

        if (_.options.lazyLoad === 'progressive') {
            _.progressiveLazyLoad();
        }

    };

    Slick.prototype.next = Slick.prototype.slickNext = function() {

        var _ = this;

        _.changeSlide({
            data: {
                message: 'next'
            }
        });

    };

    Slick.prototype.orientationChange = function() {

        var _ = this;

        _.checkResponsive();
        _.setPosition();

    };

    Slick.prototype.pause = Slick.prototype.slickPause = function() {

        var _ = this;

        _.autoPlayClear();
        _.paused = true;

    };

    Slick.prototype.play = Slick.prototype.slickPlay = function() {

        var _ = this;

        _.autoPlay();
        _.options.autoplay = true;
        _.paused = false;
        _.focussed = false;
        _.interrupted = false;

    };

    Slick.prototype.postSlide = function(index) {

        var _ = this;

        if( !_.unslicked ) {

            _.$slider.trigger('afterChange', [_, index]);

            _.animating = false;

            if (_.slideCount > _.options.slidesToShow) {
                _.setPosition();
            }

            _.swipeLeft = null;

            if ( _.options.autoplay ) {
                _.autoPlay();
            }

            if (_.options.accessibility === true) {
                _.initADA();

                if (_.options.focusOnChange) {
                    var $currentSlide = $(_.$slides.get(_.currentSlide));
                    $currentSlide.attr('tabindex', 0).focus();
                }
            }

        }

    };

    Slick.prototype.prev = Slick.prototype.slickPrev = function() {

        var _ = this;

        _.changeSlide({
            data: {
                message: 'previous'
            }
        });

    };

    Slick.prototype.preventDefault = function(event) {

        event.preventDefault();

    };

    Slick.prototype.progressiveLazyLoad = function( tryCount ) {

        tryCount = tryCount || 1;

        var _ = this,
            $imgsToLoad = $( 'img[data-lazy]', _.$slider ),
            image,
            imageSource,
            imageSrcSet,
            imageSizes,
            imageToLoad;

        if ( $imgsToLoad.length ) {

            image = $imgsToLoad.first();
            imageSource = image.attr('data-lazy');
            imageSrcSet = image.attr('data-srcset');
            imageSizes  = image.attr('data-sizes') || _.$slider.attr('data-sizes');
            imageToLoad = document.createElement('img');

            imageToLoad.onload = function() {

                if (imageSrcSet) {
                    image
                        .attr('srcset', imageSrcSet );

                    if (imageSizes) {
                        image
                            .attr('sizes', imageSizes );
                    }
                }

                image
                    .attr( 'src', imageSource )
                    .removeAttr('data-lazy data-srcset data-sizes')
                    .removeClass('slick-loading');

                if ( _.options.adaptiveHeight === true ) {
                    _.setPosition();
                }

                _.$slider.trigger('lazyLoaded', [ _, image, imageSource ]);
                _.progressiveLazyLoad();

            };

            imageToLoad.onerror = function() {

                if ( tryCount < 3 ) {

                    /**
                     * try to load the image 3 times,
                     * leave a slight delay so we don't get
                     * servers blocking the request.
                     */
                    setTimeout( function() {
                        _.progressiveLazyLoad( tryCount + 1 );
                    }, 500 );

                } else {

                    image
                        .removeAttr( 'data-lazy' )
                        .removeClass( 'slick-loading' )
                        .addClass( 'slick-lazyload-error' );

                    _.$slider.trigger('lazyLoadError', [ _, image, imageSource ]);

                    _.progressiveLazyLoad();

                }

            };

            imageToLoad.src = imageSource;

        } else {

            _.$slider.trigger('allImagesLoaded', [ _ ]);

        }

    };

    Slick.prototype.refresh = function( initializing ) {

        var _ = this, currentSlide, lastVisibleIndex;

        lastVisibleIndex = _.slideCount - _.options.slidesToShow;

        // in non-infinite sliders, we don't want to go past the
        // last visible index.
        if( !_.options.infinite && ( _.currentSlide > lastVisibleIndex )) {
            _.currentSlide = lastVisibleIndex;
        }

        // if less slides than to show, go to start.
        if ( _.slideCount <= _.options.slidesToShow ) {
            _.currentSlide = 0;

        }

        currentSlide = _.currentSlide;

        _.destroy(true);

        $.extend(_, _.initials, { currentSlide: currentSlide });

        _.init();

        if( !initializing ) {

            _.changeSlide({
                data: {
                    message: 'index',
                    index: currentSlide
                }
            }, false);

        }

    };

    Slick.prototype.registerBreakpoints = function() {

        var _ = this, breakpoint, currentBreakpoint, l,
            responsiveSettings = _.options.responsive || null;

        if ( $.type(responsiveSettings) === 'array' && responsiveSettings.length ) {

            _.respondTo = _.options.respondTo || 'window';

            for ( breakpoint in responsiveSettings ) {

                l = _.breakpoints.length-1;

                if (responsiveSettings.hasOwnProperty(breakpoint)) {
                    currentBreakpoint = responsiveSettings[breakpoint].breakpoint;

                    // loop through the breakpoints and cut out any existing
                    // ones with the same breakpoint number, we don't want dupes.
                    while( l >= 0 ) {
                        if( _.breakpoints[l] && _.breakpoints[l] === currentBreakpoint ) {
                            _.breakpoints.splice(l,1);
                        }
                        l--;
                    }

                    _.breakpoints.push(currentBreakpoint);
                    _.breakpointSettings[currentBreakpoint] = responsiveSettings[breakpoint].settings;

                }

            }

            _.breakpoints.sort(function(a, b) {
                return ( _.options.mobileFirst ) ? a-b : b-a;
            });

        }

    };

    Slick.prototype.reinit = function() {

        var _ = this;

        _.$slides =
            _.$slideTrack
                .children(_.options.slide)
                .addClass('slick-slide');

        _.slideCount = _.$slides.length;

        if (_.currentSlide >= _.slideCount && _.currentSlide !== 0) {
            _.currentSlide = _.currentSlide - _.options.slidesToScroll;
        }

        if (_.slideCount <= _.options.slidesToShow) {
            _.currentSlide = 0;
        }

        _.registerBreakpoints();

        _.setProps();
        _.setupInfinite();
        _.buildArrows();
        _.updateArrows();
        _.initArrowEvents();
        _.buildDots();
        _.updateDots();
        _.initDotEvents();
        _.cleanUpSlideEvents();
        _.initSlideEvents();

        _.checkResponsive(false, true);

        if (_.options.focusOnSelect === true) {
            $(_.$slideTrack).children().on('click.slick', _.selectHandler);
        }

        _.setSlideClasses(typeof _.currentSlide === 'number' ? _.currentSlide : 0);

        _.setPosition();
        _.focusHandler();

        _.paused = !_.options.autoplay;
        _.autoPlay();

        _.$slider.trigger('reInit', [_]);

    };

    Slick.prototype.resize = function() {

        var _ = this;

        if ($(window).width() !== _.windowWidth) {
            clearTimeout(_.windowDelay);
            _.windowDelay = window.setTimeout(function() {
                _.windowWidth = $(window).width();
                _.checkResponsive();
                if( !_.unslicked ) { _.setPosition(); }
            }, 50);
        }
    };

    Slick.prototype.removeSlide = Slick.prototype.slickRemove = function(index, removeBefore, removeAll) {

        var _ = this;

        if (typeof(index) === 'boolean') {
            removeBefore = index;
            index = removeBefore === true ? 0 : _.slideCount - 1;
        } else {
            index = removeBefore === true ? --index : index;
        }

        if (_.slideCount < 1 || index < 0 || index > _.slideCount - 1) {
            return false;
        }

        _.unload();

        if (removeAll === true) {
            _.$slideTrack.children().remove();
        } else {
            _.$slideTrack.children(this.options.slide).eq(index).remove();
        }

        _.$slides = _.$slideTrack.children(this.options.slide);

        _.$slideTrack.children(this.options.slide).detach();

        _.$slideTrack.append(_.$slides);

        _.$slidesCache = _.$slides;

        _.reinit();

    };

    Slick.prototype.setCSS = function(position) {

        var _ = this,
            positionProps = {},
            x, y;

        if (_.options.rtl === true) {
            position = -position;
        }
        x = _.positionProp == 'left' ? Math.ceil(position) + 'px' : '0px';
        y = _.positionProp == 'top' ? Math.ceil(position) + 'px' : '0px';

        positionProps[_.positionProp] = position;

        if (_.transformsEnabled === false) {
            _.$slideTrack.css(positionProps);
        } else {
            positionProps = {};
            if (_.cssTransitions === false) {
                positionProps[_.animType] = 'translate(' + x + ', ' + y + ')';
                _.$slideTrack.css(positionProps);
            } else {
                positionProps[_.animType] = 'translate3d(' + x + ', ' + y + ', 0px)';
                _.$slideTrack.css(positionProps);
            }
        }

    };

    Slick.prototype.setDimensions = function() {

        var _ = this;

        if (_.options.vertical === false) {
            if (_.options.centerMode === true) {
                _.$list.css({
                    padding: ('0px ' + _.options.centerPadding)
                });
            }
        } else {
            _.$list.height(_.$slides.first().outerHeight(true) * _.options.slidesToShow);
            if (_.options.centerMode === true) {
                _.$list.css({
                    padding: (_.options.centerPadding + ' 0px')
                });
            }
        }

        _.listWidth = _.$list.width();
        _.listHeight = _.$list.height();


        if (_.options.vertical === false && _.options.variableWidth === false) {
            _.slideWidth = Math.ceil(_.listWidth / _.options.slidesToShow);
            _.$slideTrack.width(Math.ceil((_.slideWidth * _.$slideTrack.children('.slick-slide').length)));

        } else if (_.options.variableWidth === true) {
            _.$slideTrack.width(5000 * _.slideCount);
        } else {
            _.slideWidth = Math.ceil(_.listWidth);
            _.$slideTrack.height(Math.ceil((_.$slides.first().outerHeight(true) * _.$slideTrack.children('.slick-slide').length)));
        }

        var offset = _.$slides.first().outerWidth(true) - _.$slides.first().width();
        if (_.options.variableWidth === false) _.$slideTrack.children('.slick-slide').width(_.slideWidth - offset);

    };

    Slick.prototype.setFade = function() {

        var _ = this,
            targetLeft;

        _.$slides.each(function(index, element) {
            targetLeft = (_.slideWidth * index) * -1;
            if (_.options.rtl === true) {
                $(element).css({
                    position: 'relative',
                    right: targetLeft,
                    top: 0,
                    zIndex: _.options.zIndex - 2,
                    opacity: 0
                });
            } else {
                $(element).css({
                    position: 'relative',
                    left: targetLeft,
                    top: 0,
                    zIndex: _.options.zIndex - 2,
                    opacity: 0
                });
            }
        });

        _.$slides.eq(_.currentSlide).css({
            zIndex: _.options.zIndex - 1,
            opacity: 1
        });

    };

    Slick.prototype.setHeight = function() {

        var _ = this;

        if (_.options.slidesToShow === 1 && _.options.adaptiveHeight === true && _.options.vertical === false) {
            var targetHeight = _.$slides.eq(_.currentSlide).outerHeight(true);
            _.$list.css('height', targetHeight);
        }

    };

    Slick.prototype.setOption =
    Slick.prototype.slickSetOption = function() {

        /**
         * accepts arguments in format of:
         *
         *  - for changing a single option's value:
         *     .slick("setOption", option, value, refresh )
         *
         *  - for changing a set of responsive options:
         *     .slick("setOption", 'responsive', [{}, ...], refresh )
         *
         *  - for updating multiple values at once (not responsive)
         *     .slick("setOption", { 'option': value, ... }, refresh )
         */

        var _ = this, l, item, option, value, refresh = false, type;

        if( $.type( arguments[0] ) === 'object' ) {

            option =  arguments[0];
            refresh = arguments[1];
            type = 'multiple';

        } else if ( $.type( arguments[0] ) === 'string' ) {

            option =  arguments[0];
            value = arguments[1];
            refresh = arguments[2];

            if ( arguments[0] === 'responsive' && $.type( arguments[1] ) === 'array' ) {

                type = 'responsive';

            } else if ( typeof arguments[1] !== 'undefined' ) {

                type = 'single';

            }

        }

        if ( type === 'single' ) {

            _.options[option] = value;


        } else if ( type === 'multiple' ) {

            $.each( option , function( opt, val ) {

                _.options[opt] = val;

            });


        } else if ( type === 'responsive' ) {

            for ( item in value ) {

                if( $.type( _.options.responsive ) !== 'array' ) {

                    _.options.responsive = [ value[item] ];

                } else {

                    l = _.options.responsive.length-1;

                    // loop through the responsive object and splice out duplicates.
                    while( l >= 0 ) {

                        if( _.options.responsive[l].breakpoint === value[item].breakpoint ) {

                            _.options.responsive.splice(l,1);

                        }

                        l--;

                    }

                    _.options.responsive.push( value[item] );

                }

            }

        }

        if ( refresh ) {

            _.unload();
            _.reinit();

        }

    };

    Slick.prototype.setPosition = function() {

        var _ = this;

        _.setDimensions();

        _.setHeight();

        if (_.options.fade === false) {
            _.setCSS(_.getLeft(_.currentSlide));
        } else {
            _.setFade();
        }

        _.$slider.trigger('setPosition', [_]);

    };

    Slick.prototype.setProps = function() {

        var _ = this,
            bodyStyle = document.body.style;

        _.positionProp = _.options.vertical === true ? 'top' : 'left';

        if (_.positionProp === 'top') {
            _.$slider.addClass('slick-vertical');
        } else {
            _.$slider.removeClass('slick-vertical');
        }

        if (bodyStyle.WebkitTransition !== undefined ||
            bodyStyle.MozTransition !== undefined ||
            bodyStyle.msTransition !== undefined) {
            if (_.options.useCSS === true) {
                _.cssTransitions = true;
            }
        }

        if ( _.options.fade ) {
            if ( typeof _.options.zIndex === 'number' ) {
                if( _.options.zIndex < 3 ) {
                    _.options.zIndex = 3;
                }
            } else {
                _.options.zIndex = _.defaults.zIndex;
            }
        }

        if (bodyStyle.OTransform !== undefined) {
            _.animType = 'OTransform';
            _.transformType = '-o-transform';
            _.transitionType = 'OTransition';
            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.webkitPerspective === undefined) _.animType = false;
        }
        if (bodyStyle.MozTransform !== undefined) {
            _.animType = 'MozTransform';
            _.transformType = '-moz-transform';
            _.transitionType = 'MozTransition';
            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.MozPerspective === undefined) _.animType = false;
        }
        if (bodyStyle.webkitTransform !== undefined) {
            _.animType = 'webkitTransform';
            _.transformType = '-webkit-transform';
            _.transitionType = 'webkitTransition';
            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.webkitPerspective === undefined) _.animType = false;
        }
        if (bodyStyle.msTransform !== undefined) {
            _.animType = 'msTransform';
            _.transformType = '-ms-transform';
            _.transitionType = 'msTransition';
            if (bodyStyle.msTransform === undefined) _.animType = false;
        }
        if (bodyStyle.transform !== undefined && _.animType !== false) {
            _.animType = 'transform';
            _.transformType = 'transform';
            _.transitionType = 'transition';
        }
        _.transformsEnabled = _.options.useTransform && (_.animType !== null && _.animType !== false);
    };


    Slick.prototype.setSlideClasses = function(index) {

        var _ = this,
            centerOffset, allSlides, indexOffset, remainder;

        allSlides = _.$slider
            .find('.slick-slide')
            .removeClass('slick-active slick-center slick-current')
            .attr('aria-hidden', 'true');

        _.$slides
            .eq(index)
            .addClass('slick-current');

        if (_.options.centerMode === true) {

            var evenCoef = _.options.slidesToShow % 2 === 0 ? 1 : 0;

            centerOffset = Math.floor(_.options.slidesToShow / 2);

            if (_.options.infinite === true) {

                if (index >= centerOffset && index <= (_.slideCount - 1) - centerOffset) {
                    _.$slides
                        .slice(index - centerOffset + evenCoef, index + centerOffset + 1)
                        .addClass('slick-active')
                        .attr('aria-hidden', 'false');

                } else {

                    indexOffset = _.options.slidesToShow + index;
                    allSlides
                        .slice(indexOffset - centerOffset + 1 + evenCoef, indexOffset + centerOffset + 2)
                        .addClass('slick-active')
                        .attr('aria-hidden', 'false');

                }

                if (index === 0) {

                    allSlides
                        .eq(allSlides.length - 1 - _.options.slidesToShow)
                        .addClass('slick-center');

                } else if (index === _.slideCount - 1) {

                    allSlides
                        .eq(_.options.slidesToShow)
                        .addClass('slick-center');

                }

            }

            _.$slides
                .eq(index)
                .addClass('slick-center');

        } else {

            if (index >= 0 && index <= (_.slideCount - _.options.slidesToShow)) {

                _.$slides
                    .slice(index, index + _.options.slidesToShow)
                    .addClass('slick-active')
                    .attr('aria-hidden', 'false');

            } else if (allSlides.length <= _.options.slidesToShow) {

                allSlides
                    .addClass('slick-active')
                    .attr('aria-hidden', 'false');

            } else {

                remainder = _.slideCount % _.options.slidesToShow;
                indexOffset = _.options.infinite === true ? _.options.slidesToShow + index : index;

                if (_.options.slidesToShow == _.options.slidesToScroll && (_.slideCount - index) < _.options.slidesToShow) {

                    allSlides
                        .slice(indexOffset - (_.options.slidesToShow - remainder), indexOffset + remainder)
                        .addClass('slick-active')
                        .attr('aria-hidden', 'false');

                } else {

                    allSlides
                        .slice(indexOffset, indexOffset + _.options.slidesToShow)
                        .addClass('slick-active')
                        .attr('aria-hidden', 'false');

                }

            }

        }

        if (_.options.lazyLoad === 'ondemand' || _.options.lazyLoad === 'anticipated') {
            _.lazyLoad();
        }
    };

    Slick.prototype.setupInfinite = function() {

        var _ = this,
            i, slideIndex, infiniteCount;

        if (_.options.fade === true) {
            _.options.centerMode = false;
        }

        if (_.options.infinite === true && _.options.fade === false) {

            slideIndex = null;

            if (_.slideCount > _.options.slidesToShow) {

                if (_.options.centerMode === true) {
                    infiniteCount = _.options.slidesToShow + 1;
                } else {
                    infiniteCount = _.options.slidesToShow;
                }

                for (i = _.slideCount; i > (_.slideCount -
                        infiniteCount); i -= 1) {
                    slideIndex = i - 1;
                    $(_.$slides[slideIndex]).clone(true).attr('id', '')
                        .attr('data-slick-index', slideIndex - _.slideCount)
                        .prependTo(_.$slideTrack).addClass('slick-cloned');
                }
                for (i = 0; i < infiniteCount  + _.slideCount; i += 1) {
                    slideIndex = i;
                    $(_.$slides[slideIndex]).clone(true).attr('id', '')
                        .attr('data-slick-index', slideIndex + _.slideCount)
                        .appendTo(_.$slideTrack).addClass('slick-cloned');
                }
                _.$slideTrack.find('.slick-cloned').find('[id]').each(function() {
                    $(this).attr('id', '');
                });

            }

        }

    };

    Slick.prototype.interrupt = function( toggle ) {

        var _ = this;

        if( !toggle ) {
            _.autoPlay();
        }
        _.interrupted = toggle;

    };

    Slick.prototype.selectHandler = function(event) {

        var _ = this;

        var targetElement =
            $(event.target).is('.slick-slide') ?
                $(event.target) :
                $(event.target).parents('.slick-slide');

        var index = parseInt(targetElement.attr('data-slick-index'));

        if (!index) index = 0;

        if (_.slideCount <= _.options.slidesToShow) {

            _.slideHandler(index, false, true);
            return;

        }

        _.slideHandler(index);

    };

    Slick.prototype.slideHandler = function(index, sync, dontAnimate) {

        var targetSlide, animSlide, oldSlide, slideLeft, targetLeft = null,
            _ = this, navTarget;

        sync = sync || false;

        if (_.animating === true && _.options.waitForAnimate === true) {
            return;
        }

        if (_.options.fade === true && _.currentSlide === index) {
            return;
        }

        if (sync === false) {
            _.asNavFor(index);
        }

        targetSlide = index;
        targetLeft = _.getLeft(targetSlide);
        slideLeft = _.getLeft(_.currentSlide);

        _.currentLeft = _.swipeLeft === null ? slideLeft : _.swipeLeft;

        if (_.options.infinite === false && _.options.centerMode === false && (index < 0 || index > _.getDotCount() * _.options.slidesToScroll)) {
            if (_.options.fade === false) {
                targetSlide = _.currentSlide;
                if (dontAnimate !== true && _.slideCount > _.options.slidesToShow) {
                    _.animateSlide(slideLeft, function() {
                        _.postSlide(targetSlide);
                    });
                } else {
                    _.postSlide(targetSlide);
                }
            }
            return;
        } else if (_.options.infinite === false && _.options.centerMode === true && (index < 0 || index > (_.slideCount - _.options.slidesToScroll))) {
            if (_.options.fade === false) {
                targetSlide = _.currentSlide;
                if (dontAnimate !== true && _.slideCount > _.options.slidesToShow) {
                    _.animateSlide(slideLeft, function() {
                        _.postSlide(targetSlide);
                    });
                } else {
                    _.postSlide(targetSlide);
                }
            }
            return;
        }

        if ( _.options.autoplay ) {
            clearInterval(_.autoPlayTimer);
        }

        if (targetSlide < 0) {
            if (_.slideCount % _.options.slidesToScroll !== 0) {
                animSlide = _.slideCount - (_.slideCount % _.options.slidesToScroll);
            } else {
                animSlide = _.slideCount + targetSlide;
            }
        } else if (targetSlide >= _.slideCount) {
            if (_.slideCount % _.options.slidesToScroll !== 0) {
                animSlide = 0;
            } else {
                animSlide = targetSlide - _.slideCount;
            }
        } else {
            animSlide = targetSlide;
        }

        _.animating = true;

        _.$slider.trigger('beforeChange', [_, _.currentSlide, animSlide]);

        oldSlide = _.currentSlide;
        _.currentSlide = animSlide;

        _.setSlideClasses(_.currentSlide);

        if ( _.options.asNavFor ) {

            navTarget = _.getNavTarget();
            navTarget = navTarget.slick('getSlick');

            if ( navTarget.slideCount <= navTarget.options.slidesToShow ) {
                navTarget.setSlideClasses(_.currentSlide);
            }

        }

        _.updateDots();
        _.updateArrows();

        if (_.options.fade === true) {
            if (dontAnimate !== true) {

                _.fadeSlideOut(oldSlide);

                _.fadeSlide(animSlide, function() {
                    _.postSlide(animSlide);
                });

            } else {
                _.postSlide(animSlide);
            }
            _.animateHeight();
            return;
        }

        if (dontAnimate !== true && _.slideCount > _.options.slidesToShow) {
            _.animateSlide(targetLeft, function() {
                _.postSlide(animSlide);
            });
        } else {
            _.postSlide(animSlide);
        }

    };

    Slick.prototype.startLoad = function() {

        var _ = this;

        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {

            _.$prevArrow.hide();
            _.$nextArrow.hide();

        }

        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {

            _.$dots.hide();

        }

        _.$slider.addClass('slick-loading');

    };

    Slick.prototype.swipeDirection = function() {

        var xDist, yDist, r, swipeAngle, _ = this;

        xDist = _.touchObject.startX - _.touchObject.curX;
        yDist = _.touchObject.startY - _.touchObject.curY;
        r = Math.atan2(yDist, xDist);

        swipeAngle = Math.round(r * 180 / Math.PI);
        if (swipeAngle < 0) {
            swipeAngle = 360 - Math.abs(swipeAngle);
        }

        if ((swipeAngle <= 45) && (swipeAngle >= 0)) {
            return (_.options.rtl === false ? 'left' : 'right');
        }
        if ((swipeAngle <= 360) && (swipeAngle >= 315)) {
            return (_.options.rtl === false ? 'left' : 'right');
        }
        if ((swipeAngle >= 135) && (swipeAngle <= 225)) {
            return (_.options.rtl === false ? 'right' : 'left');
        }
        if (_.options.verticalSwiping === true) {
            if ((swipeAngle >= 35) && (swipeAngle <= 135)) {
                return 'down';
            } else {
                return 'up';
            }
        }

        return 'vertical';

    };

    Slick.prototype.swipeEnd = function(event) {

        var _ = this,
            slideCount,
            direction;

        _.dragging = false;
        _.swiping = false;

        if (_.scrolling) {
            _.scrolling = false;
            return false;
        }

        _.interrupted = false;
        _.shouldClick = ( _.touchObject.swipeLength > 10 ) ? false : true;

        if ( _.touchObject.curX === undefined ) {
            return false;
        }

        if ( _.touchObject.edgeHit === true ) {
            _.$slider.trigger('edge', [_, _.swipeDirection() ]);
        }

        if ( _.touchObject.swipeLength >= _.touchObject.minSwipe ) {

            direction = _.swipeDirection();

            switch ( direction ) {

                case 'left':
                case 'down':

                    slideCount =
                        _.options.swipeToSlide ?
                            _.checkNavigable( _.currentSlide + _.getSlideCount() ) :
                            _.currentSlide + _.getSlideCount();

                    _.currentDirection = 0;

                    break;

                case 'right':
                case 'up':

                    slideCount =
                        _.options.swipeToSlide ?
                            _.checkNavigable( _.currentSlide - _.getSlideCount() ) :
                            _.currentSlide - _.getSlideCount();

                    _.currentDirection = 1;

                    break;

                default:


            }

            if( direction != 'vertical' ) {

                _.slideHandler( slideCount );
                _.touchObject = {};
                _.$slider.trigger('swipe', [_, direction ]);

            }

        } else {

            if ( _.touchObject.startX !== _.touchObject.curX ) {

                _.slideHandler( _.currentSlide );
                _.touchObject = {};

            }

        }

    };

    Slick.prototype.swipeHandler = function(event) {

        var _ = this;

        if ((_.options.swipe === false) || ('ontouchend' in document && _.options.swipe === false)) {
            return;
        } else if (_.options.draggable === false && event.type.indexOf('mouse') !== -1) {
            return;
        }

        _.touchObject.fingerCount = event.originalEvent && event.originalEvent.touches !== undefined ?
            event.originalEvent.touches.length : 1;

        _.touchObject.minSwipe = _.listWidth / _.options
            .touchThreshold;

        if (_.options.verticalSwiping === true) {
            _.touchObject.minSwipe = _.listHeight / _.options
                .touchThreshold;
        }

        switch (event.data.action) {

            case 'start':
                _.swipeStart(event);
                break;

            case 'move':
                _.swipeMove(event);
                break;

            case 'end':
                _.swipeEnd(event);
                break;

        }

    };

    Slick.prototype.swipeMove = function(event) {

        var _ = this,
            edgeWasHit = false,
            curLeft, swipeDirection, swipeLength, positionOffset, touches, verticalSwipeLength;

        touches = event.originalEvent !== undefined ? event.originalEvent.touches : null;

        if (!_.dragging || _.scrolling || touches && touches.length !== 1) {
            return false;
        }

        curLeft = _.getLeft(_.currentSlide);

        _.touchObject.curX = touches !== undefined ? touches[0].pageX : event.clientX;
        _.touchObject.curY = touches !== undefined ? touches[0].pageY : event.clientY;

        _.touchObject.swipeLength = Math.round(Math.sqrt(
            Math.pow(_.touchObject.curX - _.touchObject.startX, 2)));

        verticalSwipeLength = Math.round(Math.sqrt(
            Math.pow(_.touchObject.curY - _.touchObject.startY, 2)));

        if (!_.options.verticalSwiping && !_.swiping && verticalSwipeLength > 4) {
            _.scrolling = true;
            return false;
        }

        if (_.options.verticalSwiping === true) {
            _.touchObject.swipeLength = verticalSwipeLength;
        }

        swipeDirection = _.swipeDirection();

        if (event.originalEvent !== undefined && _.touchObject.swipeLength > 4) {
            _.swiping = true;
            event.preventDefault();
        }

        positionOffset = (_.options.rtl === false ? 1 : -1) * (_.touchObject.curX > _.touchObject.startX ? 1 : -1);
        if (_.options.verticalSwiping === true) {
            positionOffset = _.touchObject.curY > _.touchObject.startY ? 1 : -1;
        }


        swipeLength = _.touchObject.swipeLength;

        _.touchObject.edgeHit = false;

        if (_.options.infinite === false) {
            if ((_.currentSlide === 0 && swipeDirection === 'right') || (_.currentSlide >= _.getDotCount() && swipeDirection === 'left')) {
                swipeLength = _.touchObject.swipeLength * _.options.edgeFriction;
                _.touchObject.edgeHit = true;
            }
        }

        if (_.options.vertical === false) {
            _.swipeLeft = curLeft + swipeLength * positionOffset;
        } else {
            _.swipeLeft = curLeft + (swipeLength * (_.$list.height() / _.listWidth)) * positionOffset;
        }
        if (_.options.verticalSwiping === true) {
            _.swipeLeft = curLeft + swipeLength * positionOffset;
        }

        if (_.options.fade === true || _.options.touchMove === false) {
            return false;
        }

        if (_.animating === true) {
            _.swipeLeft = null;
            return false;
        }

        _.setCSS(_.swipeLeft);

    };

    Slick.prototype.swipeStart = function(event) {

        var _ = this,
            touches;

        _.interrupted = true;

        if (_.touchObject.fingerCount !== 1 || _.slideCount <= _.options.slidesToShow) {
            _.touchObject = {};
            return false;
        }

        if (event.originalEvent !== undefined && event.originalEvent.touches !== undefined) {
            touches = event.originalEvent.touches[0];
        }

        _.touchObject.startX = _.touchObject.curX = touches !== undefined ? touches.pageX : event.clientX;
        _.touchObject.startY = _.touchObject.curY = touches !== undefined ? touches.pageY : event.clientY;

        _.dragging = true;

    };

    Slick.prototype.unfilterSlides = Slick.prototype.slickUnfilter = function() {

        var _ = this;

        if (_.$slidesCache !== null) {

            _.unload();

            _.$slideTrack.children(this.options.slide).detach();

            _.$slidesCache.appendTo(_.$slideTrack);

            _.reinit();

        }

    };

    Slick.prototype.unload = function() {

        var _ = this;

        $('.slick-cloned', _.$slider).remove();

        if (_.$dots) {
            _.$dots.remove();
        }

        if (_.$prevArrow && _.htmlExpr.test(_.options.prevArrow)) {
            _.$prevArrow.remove();
        }

        if (_.$nextArrow && _.htmlExpr.test(_.options.nextArrow)) {
            _.$nextArrow.remove();
        }

        _.$slides
            .removeClass('slick-slide slick-active slick-visible slick-current')
            .attr('aria-hidden', 'true')
            .css('width', '');

    };

    Slick.prototype.unslick = function(fromBreakpoint) {

        var _ = this;
        _.$slider.trigger('unslick', [_, fromBreakpoint]);
        _.destroy();

    };

    Slick.prototype.updateArrows = function() {

        var _ = this,
            centerOffset;

        centerOffset = Math.floor(_.options.slidesToShow / 2);

        if ( _.options.arrows === true &&
            _.slideCount > _.options.slidesToShow &&
            !_.options.infinite ) {

            _.$prevArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');
            _.$nextArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');

            if (_.currentSlide === 0) {

                _.$prevArrow.addClass('slick-disabled').attr('aria-disabled', 'true');
                _.$nextArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');

            } else if (_.currentSlide >= _.slideCount - _.options.slidesToShow && _.options.centerMode === false) {

                _.$nextArrow.addClass('slick-disabled').attr('aria-disabled', 'true');
                _.$prevArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');

            } else if (_.currentSlide >= _.slideCount - 1 && _.options.centerMode === true) {

                _.$nextArrow.addClass('slick-disabled').attr('aria-disabled', 'true');
                _.$prevArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');

            }

        }

    };

    Slick.prototype.updateDots = function() {

        var _ = this;

        if (_.$dots !== null) {

            _.$dots
                .find('li')
                    .removeClass('slick-active')
                    .end();

            _.$dots
                .find('li')
                .eq(Math.floor(_.currentSlide / _.options.slidesToScroll))
                .addClass('slick-active');

        }

    };

    Slick.prototype.visibility = function() {

        var _ = this;

        if ( _.options.autoplay ) {

            if ( document[_.hidden] ) {

                _.interrupted = true;

            } else {

                _.interrupted = false;

            }

        }

    };

    $.fn.slick = function() {
        var _ = this,
            opt = arguments[0],
            args = Array.prototype.slice.call(arguments, 1),
            l = _.length,
            i,
            ret;
        for (i = 0; i < l; i++) {
            if (typeof opt == 'object' || typeof opt == 'undefined')
                _[i].slick = new Slick(_[i], opt);
            else
                ret = _[i].slick[opt].apply(_[i].slick, args);
            if (typeof ret != 'undefined') return ret;
        }
        return _;
    };

}));
;
!function(Drupal,$){Drupal.behaviors.slickCarousel={attach:function(context){const $mobileSlickContent=$(".article-feed .carousel-inside",context),$alwaysSlickContent=$(".speaker-reviews .field--name-field-speaker-reviews, .featured-speakers",context);$mobileSlickContent.length&&$mobileSlickContent.each(function(index,element){const $carousel=$(element);$(window).width()<768&&$carousel.slick({centerMode:!0,slidesToShow:1,adaptiveHeight:!0})}),$alwaysSlickContent.length&&$alwaysSlickContent.each(function(index,element){const $carousel=$(element);$carousel.slick({adaptiveHeight:!0})})}}}(Drupal,jQuery);
